<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Latex相关</title>
      <link href="/blog/2022/08/15/Latex%E7%AC%94%E8%AE%B0/"/>
      <url>/blog/2022/08/15/Latex%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  想起之前高中的时候写个公式都要用可视化的latex网站装*</p></blockquote><h2 id="好用的模板"><a href="#好用的模板" class="headerlink" title="好用的模板"></a>好用的模板</h2><ol><li>Overleaf搜索HUST 有毕业论文、开题报告以及文献翻译模板</li></ol><h2 id="常用基本指令"><a href="#常用基本指令" class="headerlink" title="常用基本指令"></a>常用基本指令</h2><h3 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h3><img src="https://img-blog.csdnimg.cn/2c2491cd554d40c7a22ba57d74a6746a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAd2VpeGluXzQxOTgyODE0,size_14,color_FFFFFF,t_70,g_se,x_16" alt="转义表" style="zoom:80%;" /><p><a href="https://blog.csdn.net/weixin_41982814/article/details/123757525">https://blog.csdn.net/weixin_41982814/article/details/123757525</a></p><h3 id="图片位置"><a href="#图片位置" class="headerlink" title="图片位置"></a>图片位置</h3><p>\begin{figure}[H&#x2F;T&#x2F;B&#x2F;P]</p><p><code>h 表示当前位置</code>：将图形放置在正文文本中给出该图形环境的地方。如果本页所剩的页面不够，这一参数将不起作用<br><code>t 表示顶部</code>：将图形放置在页面的顶部。<br><code>b 表示底部</code>：将图形放置在页面的底部。<br><code>p 表示浮动页</code>：将图形放置在一只允许有浮动对象的页面上。</p><p><a href="https://blog.csdn.net/weixin_35757704/article/details/119953341">https://blog.csdn.net/weixin_35757704/article/details/119953341</a></p><h2 id="页面美化"><a href="#页面美化" class="headerlink" title="页面美化"></a>页面美化</h2><h3 id="一个好看的代码块"><a href="#一个好看的代码块" class="headerlink" title="一个好看的代码块"></a>一个好看的代码块</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;caption&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>[dvipsnames]&#123;xcolor&#125;  <span class="comment">% 更全的色系</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;listings&#125;  <span class="comment">% 排代码用的宏包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="comment">%% listings设置</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line"><span class="keyword">\lstset</span>&#123;</span><br><span class="line">    language = Python,</span><br><span class="line">    basicstyle = <span class="keyword">\small</span><span class="keyword">\ttfamily</span>,           <span class="comment">% 基本样式 + 小号字体</span></span><br><span class="line">    rulesepcolor= <span class="keyword">\color</span>&#123;gray&#125;,             <span class="comment">% 代码块边框颜色</span></span><br><span class="line">    breaklines = true,                  <span class="comment">% 代码过长则换行</span></span><br><span class="line">    numbers = left,                     <span class="comment">% 行号在左侧显示</span></span><br><span class="line">    numberstyle = <span class="keyword">\small</span>,               <span class="comment">% 行号字体</span></span><br><span class="line">keywordstyle=<span class="keyword">\color</span>&#123;blue!70&#125;<span class="keyword">\bfseries</span>, <span class="comment">%代码关键字的颜色为蓝色，粗体</span></span><br><span class="line"> commentstyle=<span class="keyword">\color</span>&#123;red!50!green!50!blue!50&#125;<span class="keyword">\textit</span>,    <span class="comment">% 设置代码注释的颜色</span></span><br><span class="line">    stringstyle = <span class="keyword">\color</span>&#123;red!100&#125;,          <span class="comment">% 字符串颜色</span></span><br><span class="line">    frame = shadowbox,                  <span class="comment">% 用（带影子效果）方框框住代码块</span></span><br><span class="line">    showspaces = false,                 <span class="comment">% 不显示空格</span></span><br><span class="line">    columns = fixed,                    <span class="comment">% 字间距固定   </span></span><br><span class="line">    extendedchars=false,            <span class="comment">%解决代码跨页时，章节标题，页眉等汉字不显示的问题</span></span><br><span class="line">    texcl=true   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/db92fa4487f9">https://www.jianshu.com/p/db92fa4487f9</a></p><h2 id="国标引用转Bibtex"><a href="#国标引用转Bibtex" class="headerlink" title="国标引用转Bibtex"></a>国标引用转Bibtex</h2><p><a href="https://github.com/elundai/parsegbt7714">https://github.com/elundai/parsegbt7714</a></p><h2 id="Zotero-Overleaf"><a href="#Zotero-Overleaf" class="headerlink" title="Zotero+Overleaf"></a>Zotero+Overleaf</h2><p>折腾了好久…</p><ul><li>Zotero方：<ul><li>添加 <a href="https://github.com/retorquere/zotero-better-bibtex/releases">Better bibtex</a> 插件，部分设置可参考 <a href="https://zhuanlan.zhihu.com/p/458340252">一个简化导出、调整citation key的设置</a></li></ul></li><li>Overleaf方：<ul><li>我以为是可以直接联动的，后来才发现要钱TT，所以在Zotero中导出Bibtex条目后，上传至Overleaf</li><li>格式的话使用的是国标，将 <a href="https://github.com/zepinglee/gbt7714-bibtex-style">国标sty</a> 也上传至文件夹中，并添加<code>\usepackage&#123;gbt7714&#125;</code>和<code>\bibliographystyle&#123;gbt7714-numerical&#125;</code>(顺序编码)，或<code>\bibliographystyle&#123;gbt7714-author-year&#125;</code>(人名年份编码)</li><li>&#x3D;&#x3D;注意可能会出现[S.n]之类的表示出版地和出版方不明的表示，以及会出现谜之[C]&#x2F;这样的符号？？&#x3D;&#x3D;【目前无解orz】</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Software </tag>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像作为链接的宽高问题</title>
      <link href="/blog/2022/08/10/%E5%9B%BE%E5%83%8F%E4%BD%9C%E4%B8%BA%E9%93%BE%E6%8E%A5%E7%9A%84%E5%AE%BD%E9%AB%98%E9%97%AE%E9%A2%98/"/>
      <url>/blog/2022/08/10/%E5%9B%BE%E5%83%8F%E4%BD%9C%E4%B8%BA%E9%93%BE%E6%8E%A5%E7%9A%84%E5%AE%BD%E9%AB%98%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Situation"><a href="#Situation" class="headerlink" title="Situation"></a>Situation</h2><p>在实际实现页面的时候，我们常常会使用图片作为跳转链接的按钮，之前在实现的过程中往往还会套个div啥的，或者把a打在span之类的文字上</p><p>这次直接用a嵌套img，点是能点，就是查看元素之后发现两者高度不同</p><p><img src="https://upload-images.jianshu.io/upload_images/1950391-31ffea02d09fa837.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/223/format/webp" alt="img"></p><h2 id="Reason-amp-Solution"><a href="#Reason-amp-Solution" class="headerlink" title="Reason &amp; Solution"></a>Reason &amp; Solution</h2><p>img标签放在了a标签 (inline模型) 内部，由于inline不是用来包含内容的，因此这需要将a标签display改为inline-block或者block</p><ul><li>关于inline&#x2F;block&#x2F;inline-block的介绍：<a href="https://www.cnblogs.com/bcCai/p/14916962.html">https://www.cnblogs.com/bcCai/p/14916962.html</a></li><li>b td a img span都是行内     p div ul table form 是block</li></ul><p>但这之后又会发现a比img更大了，因为img在a中垂直对齐方式也就是vertical-align默认值为baseline，所以img最垂直对齐时是按照a的基线对齐而不是底线</p><ul><li>关于baseline的介绍：<a href="https://www.cnblogs.com/can-i-do/p/12634131.html">https://www.cnblogs.com/can-i-do/p/12634131.html</a> 【讲得非常清楚】</li></ul><p>​<img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220829162541113.png" alt="image-20220829162541113" style="zoom: 33%;" /><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220829162556105.png" alt="image-20220829162556105" style="zoom: 33%;" /></p><p>所以最终：<code>a&#123;display:inline-block;&#125;</code>    <code>img&#123;vertical-align:bottom;&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/blog/2022/08/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/blog/2022/08/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  This is the new beginning   : ）</p></blockquote><ul><li>theme page<ul><li>现在正在使用的是<a href="https://github.com/probberechts/hexo-theme-cactus">Cactus</a>这个主题 黑绿配色很酷</li></ul></li><li>icon page<ul><li><a href="https://fontawesome.com/icons?d=gallery&amp;s=brands">https://fontawesome.com/icons?d=gallery&amp;s=brands</a></li></ul></li><li>Beautify<ul><li>一个针对Cactus的美化方案：<a href="https://blog.csdn.net/Reinhart_L/article/details/122587975">https://blog.csdn.net/Reinhart_L/article/details/122587975</a></li></ul></li><li>如何自定义博客主页？（将hexo博客页搭建于非github page的仓库）<ul><li><a href="https://www.jianshu.com/p/80e0e1058bda">https://www.jianshu.com/p/80e0e1058bda</a></li><li>更新主页内容时需要clone username.github.io仓库至本地 单独修改index.html再push回去</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vxe-table</title>
      <link href="/blog/2022/07/20/%E5%88%9D%E8%AF%86vxe-table/"/>
      <url>/blog/2022/07/20/%E5%88%9D%E8%AF%86vxe-table/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  感觉element-ui的表有点不好用，听说有个给vue的专门做表格的就决定学习一下~</p></blockquote><h2 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h2><p>官网：<a href="https://github.com/x-extends/vxe-table">https://github.com/x-extends/vxe-table</a></p><p>相比element的表最大的优势就是可编辑！！！！！</p><p>另外：表格类型多，且支持大数据量加载，性能大幅提升，滚动流畅（理论上最大可以支持 60w 行），还可以比较简单地导出下载</p><p>不过！比较冷门所以查错比较麻烦，用得人不是很多，在项目中引入要考虑学习成本~</p><h2 id="具体组成"><a href="#具体组成" class="headerlink" title="具体组成"></a>具体组成</h2><p>Vxe-table由三个部分组成，表格样式，表格数据，表格方法。</p><p>一个简单的案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;vxe-table</span><br><span class="line">v-if=&quot;classList&quot;</span><br><span class="line">border</span><br><span class="line">resizable</span><br><span class="line">row-key</span><br><span class="line">highlight-hover-row</span><br><span class="line">keep-source</span><br><span class="line">max-height=&quot;600px&quot;</span><br><span class="line">ref=&quot;xTable&quot;</span><br><span class="line">:data=&quot;list&quot;&gt;</span><br><span class="line">    &lt;vxe-table-column type=&quot;checkbox&quot; width=&quot;60&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;userId&quot; title=&quot;学号&quot; cell-type=&quot;string&quot;&gt;</span><br><span class="line">        &lt;template v-slot=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">            &lt;router-link :to=&quot;&#123;path:&#x27;/admin/user/details&#x27;, query:&#123;userId: row.userId, classId: row.classId&#125;&#125;&quot;&gt;</span><br><span class="line">                &#123;&#123;row.userId&#125;&#125;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;name&quot; title=&quot;姓名&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;classId&quot; title=&quot;班级&quot; :formatter=&quot;formatterClass&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;groupId&quot; title=&quot;小组&quot;&gt;</span><br><span class="line">        &lt;template v-slot=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">            &lt;router-link :to=&quot;&#123;path:&#x27;/admin/team/details&#x27;, query:&#123;groupId: row.groupId, classId: row.classId&#125;&#125;&quot;&gt;</span><br><span class="line">                &#123;&#123;toGroupName(row.groupId)&#125;&#125;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;password&quot; title=&quot;密码&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;telephone&quot; title=&quot;电话号码&quot; cell-type=&quot;string&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    &lt;vxe-table-column field=&quot;status&quot; title=&quot;职务&quot; :formatter=&quot;formatterStatus&quot;&gt;&lt;/vxe-table-column&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;vxe-table-column title=&quot;操作&quot; width=&quot;150px&quot;&gt;</span><br><span class="line">        &lt;template v-slot=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">            &lt;vxe-button type=&quot;button&quot; @click=&quot;editEvent(row)&quot; data-toggle=&quot;modal&quot; data-target=&quot;#UpdateModal&quot; &gt;修改&lt;/vxe-button&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;vxe-button type=&quot;button&quot; @click=&quot;removeEvent(row)&quot; status=&quot;danger&quot;&gt;删除&lt;/vxe-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">    &lt;/vxe-table-column&gt;</span><br><span class="line">&lt;/vxe-table&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>验证：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">validRules</span>: &#123;</span><br><span class="line"><span class="string">&#x27;3&#x27;</span>: [</span><br><span class="line">&#123;<span class="attr">required</span>:<span class="literal">true</span>, <span class="attr">message</span>:<span class="string">&#x27;此项必填&#x27;</span>&#125;,</span><br><span class="line">&#123;<span class="attr">validator</span>: maxValid&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">maxValid</span> = (<span class="params">&#123; cellValue &#125;</span>) =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (cellValue &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="title function_">reject</span>()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">resolve</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>和element-ui存在size描述的差别：<ul><li>element-plus的为large、default、small，但是Vxe-Table为medium、small、mini</li></ul></li><li></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker打包部署</title>
      <link href="/blog/2022/07/13/Docker%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2/"/>
      <url>/blog/2022/07/13/Docker%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>From what is docker to how to use it.</p></blockquote><h2 id="应用需求"><a href="#应用需求" class="headerlink" title="应用需求"></a>应用需求</h2><p>开发完成后，需要在不同的机器上测试、运行等，但因为为完全打包的应用往往有其特定的运行环境，所以在新机器上运行所需要的也不仅仅是代码本身。</p><p>直观地来想，我们可以想到使用虚拟机（类似JAVA的思路）来完成这一任务，但虚拟机本身的配置也是麻烦事，于是有了Docker。</p><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>Docker 是一种用容器轻松创建、部署和运行应用程序的工具，它为每个应用提供一个完全隔离的运行环境。</p><p>又因它不涉及虚拟机”模拟底层硬件“的工作，因而轻量许多。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>参考资料：</p><ul><li><a href="https://www.bilibili.com/video/BV1s54y1n7Ev">https://www.bilibili.com/video/BV1s54y1n7Ev</a></li><li></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>永恒与须臾的造梦者</title>
      <link href="/blog/2022/06/23/%E6%B0%B8%E6%81%92%E4%B8%8E%E9%A1%BB%E8%87%BE%E7%9A%84%E9%80%A0%E6%A2%A6%E8%80%85/"/>
      <url>/blog/2022/06/23/%E6%B0%B8%E6%81%92%E4%B8%8E%E9%A1%BB%E8%87%BE%E7%9A%84%E9%80%A0%E6%A2%A6%E8%80%85/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>映像作品</title>
      <link href="/blog/2022/06/23/%E6%98%A0%E5%83%8F%E4%BD%9C%E5%93%81/"/>
      <url>/blog/2022/06/23/%E6%98%A0%E5%83%8F%E4%BD%9C%E5%93%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  Editing doesn’t make this world a better place. I use it to create my better world.</p></blockquote><p>我也想不起来最开始是为什么想要去自己做映像了。</p><p>也许只是刷到了一个教程就天然地想学，也可能是成长在“贴吧纪元”的我对进行二创这种事抱有天然的依赖。</p><p>总而言之从爱剪辑, Aviutl, Premier 到 AE &amp; 达芬奇的八年时间，我始终以一种“爱”的形式面对着我的“创作”，即使在今天它看上去更像是技能而不是爱好。</p><p>感恩从这个世界里学到的一切。</p><h1 id="第一次接的商单"><a href="#第一次接的商单" class="headerlink" title="第一次接的商单"></a>第一次接的商单</h1><p>主要做了Pt.1 + 副歌，第一次正经用auto-sway，体验很好，主要是画师分层了，非常舒服，希望以后碰到的画师都这样。</p><p>另外视频是国庆发出去了    我人真没过个舒服的国庆LOL🤣</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=627336846&bvid=BV1Lt4y1v7vB&cid=243088460&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><h2 id="接的几个无偿单"><a href="#接的几个无偿单" class="headerlink" title="接的几个无偿单"></a>接的几个无偿单</h2><p>非常舒服的合作，曲绘质量很好，尝试了很多创新，也被来约单的人说完全是可以收费的水平 很爽。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=884263326&bvid=BV1xK4y1Y748&cid=228497306&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe><p>接了同人，第一次做古风，很感谢这一次经验，不然做高德那个估计得做一个月（）</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=244353800&bvid=BV19v411y732&cid=225759863&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe><p>第一次接互勉，歌很短所以不用太想分镜哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=753783927&bvid=BV1dk4y1q7ms&cid=211552928&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe><h1 id="其他自制"><a href="#其他自制" class="headerlink" title="其他自制"></a>其他自制</h1><p>因为没有po上网过，外加之前用的hexo的视频插件好像最近老是处bug… 有机会再放上来</p>]]></content>
      
      
      
        <tags>
            
            <tag> Videos </tag>
            
            <tag> Artworks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影像作品</title>
      <link href="/blog/2022/06/23/%E5%BD%B1%E5%83%8F%E4%BD%9C%E5%93%81/"/>
      <url>/blog/2022/06/23/%E5%BD%B1%E5%83%8F%E4%BD%9C%E5%93%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  主要拍摄设备：</p><ul><li>📷 Fujifilm XS-10 </li><li>🎥 15-45 + 56 1.4 </li><li>📸 CCD Cannon IXUS105</li><li>📱 Huawei p30（想换掉它！！！）</li></ul></blockquote><p>这是个大工程 预计有空会按时间轴全部归档到不同的文章中</p><p>目前先放一些有趣的 Sample</p><p><del>自主占坑👻</del></p><p>全部图片为raw直出 这里不是小红书 看点原汁原味吧</p><div>    <style>        .pics{            margin:50px auto;            text-align:center;        }        img{                  max-width:800px;            max-height:800px;        }        .cap{                  margin-top:30px;            font-style:normal;            color:#a3a3a3;        }    </style>    <div class='pics'>        <img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/DSCF1560.JPG" />        <div class='cap'>《规整》</div>    </div></div><div>    <style>        .pics{            margin:50px auto;            text-align:center;        }        img{                  max-width:800px;            max-height:800px;        }        .cap{                  margin-top:30px;            font-style:normal;            color:#a3a3a3;        }    </style>    <div class='pics'>        <img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/DSCF2095.jpg" />        <div class='cap'>《人造月亮》</div>    </div></div><div>    <style>        .pics{            margin:50px auto;            text-align:center;        }        img{                  max-width:800px;            max-height:800px;        }        .cap{                  margin-top:30px;            font-style:normal;            color:#a3a3a3;        }    </style>    <div class='pics'>        <img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/DSCF2763.JPG" />        <div class='cap'>《少女摄像师》</div>    </div></div><div>    <style>        .pics{            margin:50px auto;            text-align:center;        }        img{                  max-width:800px;            max-height:800px;        }        .cap{                  margin-top:30px;            font-style:normal;            color:#a3a3a3;        }    </style>    <div class='pics'>        <img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/DSCF1235.JPG" />        <div class='cap'>《花咲く旅路》</div>    </div></div><div>    <style>        .pics{            margin:50px auto;            text-align:center;        }        img{                  max-width:800px;            max-height:800px;        }        .cap{                  margin-top:30px;            font-style:normal;            color:#a3a3a3;        }    </style>    <div class='pics'>        <img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/DSCF2487.JPG" />        <div class='cap'>《瞬》</div>    </div></div>]]></content>
      
      
      
        <tags>
            
            <tag> Videos </tag>
            
            <tag> Artworks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app入门</title>
      <link href="/blog/2022/06/20/uni-app%E5%85%A5%E9%97%A8/"/>
      <url>/blog/2022/06/20/uni-app%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>消失的外链与作为替代品的截图</title>
      <link href="/blog/2022/06/13/%E6%B6%88%E5%A4%B1%E7%9A%84%E5%A4%96%E9%93%BE%E4%B8%8E%E4%BD%9C%E4%B8%BA%E6%9B%BF%E4%BB%A3%E5%93%81%E7%9A%84%E6%88%AA%E5%9B%BE/"/>
      <url>/blog/2022/06/13/%E6%B6%88%E5%A4%B1%E7%9A%84%E5%A4%96%E9%93%BE%E4%B8%8E%E4%BD%9C%E4%B8%BA%E6%9B%BF%E4%BB%A3%E5%93%81%E7%9A%84%E6%88%AA%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>互联网原本是一个以开放包容为核心的“互联平台”，但是随着小范围的“平台”割据，链接这一互联网的核心元素变得越发难以使用。</p><p>在我和朋友的交流中也会明显感受到，我们现在顶多在分享b站这样的通用平台上的信息时会复制一下BV号，更习惯的方式还是分享截图。</p><p>但作为一名传媒学子，我本能地对截图感到不可信。</p><p>（案例：我的世界截图误认为是航母图 官媒也转发）</p><p>且不说图像和文字本身语义严谨性的固有差距，近年来p图走进千家万户也让我愈发觉得截图可怕。</p><p>与此同时，截图对信息溯源带来的损害也是不可估量的（结合podcast所听的内容）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Podcast-GQ&amp;戴锦华老师</title>
      <link href="/blog/2022/06/02/Podcast-GQ-%E6%88%B4%E9%94%A6%E5%8D%8E%E8%80%81%E5%B8%88/"/>
      <url>/blog/2022/06/02/Podcast-GQ-%E6%88%B4%E9%94%A6%E5%8D%8E%E8%80%81%E5%B8%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  两段关于注视与被注视，主体性与视角的论点一阵见血。值得反复回听的一期播客。另外戴老师说话语速真的好快，不建议以任何倍速形式在任何不能全神贯注的场合下听。</p></blockquote><h2 id="新媒体造成的偶像化问题（00-15-00-18）"><a href="#新媒体造成的偶像化问题（00-15-00-18）" class="headerlink" title="新媒体造成的偶像化问题（00:15-00:18）"></a>新媒体造成的偶像化问题（00:15-00:18）</h2><ul><li>屏幕为我们结构的世界 我们被屏幕所框住，所解构<ul><li>屏幕前面的一切都是有序的</li><li>屏幕背后的电子元件被隐去</li><li>视角理论：屏幕框外的被隐去</li></ul></li><li>例：网课体验<ul><li>关掉摄像头的学生：一片墓碑，黑色的框里标注名字；黑暗中窥视的眼睛（即使实际上并不这么做 也会让人产生被窥视感）</li><li>疲惫的原因：想要“穿过”屏幕，屏幕后才是真实的世界</li></ul></li><li>镜像的世界（reflector）<ul><li>“你说你是我的粉丝，你只是在说你爱你自己，你爱投射到我身上的你自己”</li></ul></li><li>自恋文化<ul><li>自拍——一种症候性的象征<ul><li>背对美景，面对虚空</li><li>不仅只看自己，也不看环境，不看世界</li></ul></li></ul></li></ul><h2 id="对金句的需要-00-25-00-28"><a href="#对金句的需要-00-25-00-28" class="headerlink" title="对金句的需要(00:25-00:28)"></a>对金句的需要(00:25-00:28)</h2><ul><li>是时代洪流里的一块木板还是可以写在本子上的格言</li></ul><h2 id="被重构的观众主体位置-00-32-00-40"><a href="#被重构的观众主体位置-00-32-00-40" class="headerlink" title="被重构的观众主体位置(00:32-00:40)"></a>被重构的观众主体位置(00:32-00:40)</h2><ul><li>墨西哥三杰？——墨西哥四杰：镜头随意暴露（故事片的金科玉律被打破）</li><li>观众的自我位置与主题想象的变化：游戏中成长起来的电影观众</li><li>以前的观众-&gt;大梦一场 现在的观众-&gt;有一种我在消费你的技术，你的制作的清醒<ul><li>cp粉爬墙——疯狂之中的巨大清醒<ul><li>养成“我”的操纵感</li><li>作为粉丝是在角色扮演着信徒 观察着“你”演成什么样</li></ul></li><li>写丁真的报道——登顶热搜的是一张合照<ul><li>内容生产者变为纯粹的素材提供商——重要的是我来编织我的故事</li><li>蝗虫过境般的消费力度与速度</li></ul></li><li>主体性很强也很弱的现状<ul><li>强大的主体其实是自我催眠和自我说服<ul><li>潜意识自觉：真理在他心中 但是大家在共同让这种共同不浮现出来</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Podcast </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mock.js学习</title>
      <link href="/blog/2022/06/02/Mock-js%E5%AD%A6%E4%B9%A0/"/>
      <url>/blog/2022/06/02/Mock-js%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>   用Echarts做地图的时候，被提到前端先Mock 一下，其实这个词我都是和别人模拟面试学会的哈哈哈哈哈，所以当然又不得不重新学一下了TT</p></blockquote><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在前端，后端开发进展不一致时，往往会出现前端无法得到质量较高的数据，从而测试其实现质量的情况。在个人项目中，我们往往会直接在data中加入假数据，等后端接口来了再重新写。但事实上，这种方式不仅可能因为数据本身较为简单，无法探查到实际bug的生成，同时在后续与后端对接时，也可能会因为写得乱七八糟而需要大量的删改。</p><p>因此我们需要mock工具。事实上这和在算法竞赛中，验证算法是否可行时，会经常使用data.cpp和pai.cpp进行验证的思路很类似。</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol><li>前后端分离适用</li><li>可随机生成大量的数据，且可模拟增删改查过程</li><li>数据类型丰富</li><li>可扩展数据类型</li><li>在已有接口文档的情况下，我们可以直接按照接口文档来开发，将相应的字段写好，在接口完成 之后，只需要改变url地址即可。</li></ol><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>官网：<a href="https://github.com/nuysoft/Mock/wiki/Getting-Started">https://github.com/nuysoft/Mock/wiki/Getting-Started</a></p><p><strong>Mock.mock(url, type, data)</strong></p><p>其中data可以写成：名字|规则: 内容  <em>eg：</em></p><p><strong>属性值是字符串 String</strong></p><ol><li><p><code>&#39;name|min-max&#39;: string</code></p><p>通过重复 <code>string</code> 生成一个字符串，重复次数大于等于 <code>min</code>，小于等于 <code>max</code>。</p></li><li><p><code>&#39;name|count&#39;: string</code></p><p>通过重复 <code>string</code> 生成一个字符串，重复次数等于 <code>count</code>。</p></li></ol><p><strong>属性值是数字 Number</strong></p><ol><li><p><code>&#39;name|+1&#39;: number</code></p><p>属性值自动加 1，初始值为 <code>number</code>。</p></li><li><p><code>&#39;name|min-max&#39;: number</code></p><p>生成一个大于等于 <code>min</code>、小于等于 <code>max</code> 的整数，属性值 <code>number</code> 只是用来确定类型。</p></li><li><p><code>&#39;name|min-max.dmin-dmax&#39;: number</code></p><p>生成一个浮点数，整数部分大于等于 <code>min</code>、小于等于 <code>max</code>，小数部分保留 <code>dmin</code> 到 <code>dmax</code> 位。</p></li></ol><p><strong>属性值是布尔型 Boolean</strong></p><ol><li><p><code>&#39;name|1&#39;: boolean</code></p><p>随机生成一个布尔值，值为 true 的概率是 1&#x2F;2，值为 false 的概率同样是 1&#x2F;2。</p></li><li><p><code>&#39;name|min-max&#39;: value</code></p><p>随机生成一个布尔值，值为 <code>value</code> 的概率是 <code>min / (min + max)</code>，值为 <code>!value</code> 的概率是 <code>max / (min + max)</code>。</p></li></ol><p><strong>属性值是对象 Object</strong></p><ol><li><p><code>&#39;name|count&#39;: object</code></p><p>从属性值 <code>object</code> 中随机选取 <code>count</code> 个属性。</p></li><li><p><code>&#39;name|min-max&#39;: object</code></p><p>从属性值 <code>object</code> 中随机选取 <code>min</code> 到 <code>max</code> 个属性。</p></li></ol><p><strong>属性值是数组 Array</strong></p><ol><li><p><code>&#39;name|1&#39;: array</code></p><p>从属性值 <code>array</code> 中随机选取 1 个元素，作为最终值。</p></li><li><p><code>&#39;name|+1&#39;: array</code></p><p>从属性值 <code>array</code> 中顺序选取 1 个元素，作为最终值。</p></li><li><p><code>&#39;name|min-max&#39;: array</code></p><p>通过重复属性值 <code>array</code> 生成一个新数组，重复次数大于等于 <code>min</code>，小于等于 <code>max</code>。</p></li><li><p><code>&#39;name|count&#39;: array</code></p><p>通过重复属性值 <code>array</code> 生成一个新数组，重复次数为 <code>count</code>。</p></li></ol><p><strong>属性值是函数 Function</strong></p><ol><li><p><code>&#39;name&#39;: function</code></p><p>执行函数 <code>function</code>，取其返回值作为最终的属性值，函数的上下文为属性 <code>&#39;name&#39;</code> 所在的对象。</p></li></ol><p><strong>属性值是正则表达式 RegExp</strong></p><ol><li><p><code>&#39;name&#39;: regexp</code></p><p>根据正则表达式 <code>regexp</code> 反向生成可以匹配它的字符串。用于生成自定义格式的字符串。</p></li></ol><p>另外，mock本身也有自带一些很好用的数据，如城市地域等</p><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220902164701266.png" alt="image-20220902164701266" style="zoom: 67%;" /><p>还有一些常用的如生成随机时间等可参考：<a href="https://blog.csdn.net/KimBing/article/details/122037282?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166210873016782391835012%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=166210873016782391835012&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-3-122037282-null-null.nonecase&utm_term=mock&spm=1018.2226.3001.4450">Mock 实例</a></p><h2 id="Mock-axios"><a href="#Mock-axios" class="headerlink" title="Mock+axios"></a>Mock+axios</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/getGoods&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>:<span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//成功的回调函数，返回的是增加的数据</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">data</span>.<span class="property">data</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">url</span> = data.<span class="property">data</span>.<span class="property">data</span>[<span class="number">0</span>].<span class="property">goodsImg</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;/getGoods&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(config);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Music Weekly vol.01</title>
      <link href="/blog/2022/05/31/MusicWeekly-ep1/"/>
      <url>/blog/2022/05/31/MusicWeekly-ep1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  Welcome to the first episode of 「Music Weekly」~</p></blockquote><p>As the name implies, every week </p><p>Enjoy !</p><p>[iframe]</p>]]></content>
      
      
      
        <tags>
            
            <tag> Music Weekly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新媒体综合设计实验——小方生成器</title>
      <link href="/blog/2022/05/31/%E5%B0%8F%E6%96%B9%E7%94%9F%E6%88%90%E5%99%A8/"/>
      <url>/blog/2022/05/31/%E5%B0%8F%E6%96%B9%E7%94%9F%E6%88%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  大学三年头一回一个人组队  <del>太爽了耶！</del></p></blockquote><h3 id="选题思路"><a href="#选题思路" class="headerlink" title="选题思路"></a>选题思路</h3><p>第一次自己整</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Echarts相关</title>
      <link href="/blog/2022/05/31/Echarts%E7%9B%B8%E5%85%B3/"/>
      <url>/blog/2022/05/31/Echarts%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>q</p><blockquote><p>  其实我早就应该在学echarts了只是之前好像都是用matplotlib糊弄过去了orz</p></blockquote><h2 id="Echarts"><a href="#Echarts" class="headerlink" title="Echarts"></a>Echarts</h2><h2 id="Echarts的地图"><a href="#Echarts的地图" class="headerlink" title="Echarts的地图"></a>Echarts的地图</h2><p>因为这次主要就是写了项目里的地图页，一个中国地图一个动态点击呈现的省级地图，所以这里先特别总结一下写地图的注意事项。</p><h3 id="地图引入"><a href="#地图引入" class="headerlink" title="地图引入"></a>地图引入</h3><h3 id="地图数据获取"><a href="#地图数据获取" class="headerlink" title="地图数据获取"></a>地图数据获取</h3><h3 id="地图大小"><a href="#地图大小" class="headerlink" title="地图大小"></a>地图大小</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aspectScale</span>:<span class="number">0.75</span>, <span class="comment">//长宽比,0.75的含义为宽是高的0.75,假如高为100,宽就只有75;0.5的含义就是宽只有高的一半,假如高为100,宽就只有50</span></span><br><span class="line"><span class="attr">zoom</span>:<span class="number">1.2</span> <span class="comment">//视觉比例大小,1.2即为原有大小的1.2倍</span></span><br><span class="line"><span class="attr">roam</span>:<span class="literal">false</span>, <span class="comment">//是否开启鼠标缩放和平移漫游。默认不开启。可以不用设置,如果只想要开启缩放或者平移，可以设置成 &#x27;scale&#x27; 或者 &#x27;move&#x27;。设置成 true 为都开启</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6日常学习</title>
      <link href="/blog/2022/05/23/ES6%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
      <url>/blog/2022/05/23/ES6%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  之前其实都没有系统性地学过ES6的语法(也没必要？感觉面试应该要准备)，所以先看&#x2F;用到啥学啥吧</p></blockquote><h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><p>为什么要用ES6的let和const呢？</p><ol><li><p>不存在变量提升</p><ul><li>var 命令会发生<code>变量提升</code>现象，即变量可以在声明之前使用，值为<code>undefined</code>。</li><li>let 和 const 则没有变量声明提升的功能，必须要先声明才能使用</li></ul></li><li><p>不允许重复声明</p><ul><li><p>var命令能重复声明，后者覆盖前者</p></li><li><pre><code class="javascript">var a = 1;var a = 2;</code></pre></li><li><p>let 和 const不允许在相同作用域内，重复声明同一个变量</p></li></ul></li><li><p>作用域</p><ul><li><p>var 的作用域是以函数为界限</p></li><li><p>let 和 const 的作用域是块作用域，块级作用域指 <code>&#123; &#125;</code> 内的范围</p></li><li><p>var 可以定义全局变量和局部变量，let 和 const 只能定义局部变量</p></li><li><p>const 的声明的常量不能被修改，但对于引用类型来说，堆内存中的值是可以被改变的。</p></li><li><p>&#96;&#96;&#96;js<br>if(true){<br>var a &#x3D; 1;<br>}<br>console.log(a); &#x2F;&#x2F;打印1<br>&#x2F;&#x2F;let作用域展示<br>if(true){<br>let b &#x3D; 1; &#x2F;&#x2F;b的作用域仅仅是在if条件内<br>}<br>console.log(b); &#x2F;&#x2F;报错，提示b没有定义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4.  变量作为全局属性</span><br><span class="line"></span><br><span class="line">    -   定义的变量会作为window对象的属性，let不会</span><br><span class="line"></span><br><span class="line">## 箭头函数</span><br><span class="line"></span><br><span class="line">ES6 中函数式声明方式被箭头函数 =&gt; 取代    箭头函数：使用 =&gt; 定义函数</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">let add = (a,b) =&gt; &#123;</span><br><span class="line">    return a+b;</span><br><span class="line">&#125;</span><br><span class="line">let print = () =&gt; &#123;</span><br><span class="line">    console.log(&#x27;hi&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>箭头函数和普通函数最大的区别在于其内部this永远指向其父级对象的this</p><h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><p>4个数组方法：map、reduce、filter、forEach</p><ul><li>map：映射</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="keyword">let</span> numNew = nums.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item * <span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numNew);</span><br></pre></td></tr></table></figure><ul><li>filter：过滤</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="keyword">let</span> newNew = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item &lt; <span class="number">4</span>)<span class="comment">//newNew为[1,2,3];</span></span><br></pre></td></tr></table></figure><ul><li>reduce：汇总</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>];</span><br><span class="line"><span class="comment">//reduce实现累加</span></span><br><span class="line"><span class="keyword">let</span> total = nums.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, cur</span>) =&gt;</span> prev + cur, <span class="number">0</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"><span class="comment">//reduce实现累乘</span></span><br><span class="line"><span class="keyword">let</span> sum = nums.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, cur</span>) =&gt;</span> prev * cur, <span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum);</span><br></pre></td></tr></table></figure><ul><li>forEach：迭代</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">54</span>];</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index + <span class="string">&quot;:&quot;</span> + item);    <span class="comment">//0:2, 1:5, 2:6, 3:9, 4:7, 5:54</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><p>参考：<a href="https://es6.ruanyifeng.com/">阮一峰的ES6教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>登录页验证码实现</title>
      <link href="/blog/2022/05/18/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
      <url>/blog/2022/05/18/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>   之前观察的时候就发现，很多地方的登录页面的验证码都长一样，果然也是有组件可以用的。</p></blockquote><p>谢谢leader第一次让我写页面只是写个登录页哈哈哈哈哈，不然真的手生到不会写就很尴尬了TT不过之前自己小打小闹写登录页的时候都没有验证码，遂学习了一下。</p><p>验证码的前端逻辑基本就是进行图形绘制,取几个随机数放入图片中,加入干扰,进行验证。而identify是vue的一个插件，正是使用<a href="https://so.csdn.net/so/search?q=canvas&spm=1001.2101.3001.7020">canvas</a>来生成图形验证码实现上述逻辑。</p><h2 id="Identify-vue"><a href="#Identify-vue" class="headerlink" title="Identify.vue"></a>Identify.vue</h2><p>在components中新建该文件，并引入对应的identify代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;s-canvas&quot;&gt;</span><br><span class="line">    &lt;canvas id=&quot;s-canvas&quot; :width=&quot;contentWidth&quot; :height=&quot;contentHeight&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &#x27;SIdentify&#x27;,</span><br><span class="line">    props: &#123;</span><br><span class="line">      identifyCode: &#123;</span><br><span class="line">        type: String,</span><br><span class="line">        default: &#x27;1234&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      fontSizeMin: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 20</span><br><span class="line">      &#125;,</span><br><span class="line">      fontSizeMax: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 35</span><br><span class="line">      &#125;,</span><br><span class="line">      backgroundColorMin: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 180</span><br><span class="line">      &#125;,</span><br><span class="line">      backgroundColorMax: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 240</span><br><span class="line">      &#125;,</span><br><span class="line">      colorMin: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 50</span><br><span class="line">      &#125;,</span><br><span class="line">      colorMax: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 160</span><br><span class="line">      &#125;,</span><br><span class="line">      lineColorMin: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 40</span><br><span class="line">      &#125;,</span><br><span class="line">      lineColorMax: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 180</span><br><span class="line">      &#125;,</span><br><span class="line">      dotColorMin: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      dotColorMax: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 255</span><br><span class="line">      &#125;,</span><br><span class="line">      contentWidth: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 112</span><br><span class="line">      &#125;,</span><br><span class="line">      contentHeight: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 38</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      // 生成一个随机数</span><br><span class="line">      randomNum (min, max) &#123;</span><br><span class="line">        return Math.floor(Math.random() * (max - min) + min)</span><br><span class="line">      &#125;,</span><br><span class="line">      // 生成一个随机的颜色</span><br><span class="line">      randomColor (min, max) &#123;</span><br><span class="line">        let r = this.randomNum(min, max)</span><br><span class="line">        let g = this.randomNum(min, max)</span><br><span class="line">        let b = this.randomNum(min, max)</span><br><span class="line">        return &#x27;rgb(&#x27; + r + &#x27;,&#x27; + g + &#x27;,&#x27; + b + &#x27;)&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      drawPic () &#123;</span><br><span class="line">        let canvas = document.getElementById(&#x27;s-canvas&#x27;)</span><br><span class="line">        let ctx = canvas.getContext(&#x27;2d&#x27;)</span><br><span class="line">        ctx.textBaseline = &#x27;bottom&#x27;</span><br><span class="line">        // 绘制背景</span><br><span class="line">        ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)</span><br><span class="line">        ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)</span><br><span class="line">        // 绘制文字</span><br><span class="line">        for (let i = 0; i &lt; this.identifyCode.length; i++) &#123;</span><br><span class="line">          this.drawText(ctx, this.identifyCode[i], i)</span><br><span class="line">        &#125;</span><br><span class="line">        this.drawLine(ctx)</span><br><span class="line">        this.drawDot(ctx)</span><br><span class="line">      &#125;,</span><br><span class="line">      drawText (ctx, txt, i) &#123;</span><br><span class="line">        ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)</span><br><span class="line">        ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + &#x27;px SimHei&#x27;</span><br><span class="line">        let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))</span><br><span class="line">        let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)</span><br><span class="line">        var deg = this.randomNum(-45, 45)</span><br><span class="line">        // 修改坐标原点和旋转角度</span><br><span class="line">        ctx.translate(x, y)</span><br><span class="line">        ctx.rotate(deg * Math.PI / 180)</span><br><span class="line">        ctx.fillText(txt, 0, 0)</span><br><span class="line">        // 恢复坐标原点和旋转角度</span><br><span class="line">        ctx.rotate(-deg * Math.PI / 180)</span><br><span class="line">        ctx.translate(-x, -y)</span><br><span class="line">      &#125;,</span><br><span class="line">      drawLine (ctx) &#123;</span><br><span class="line">        // 绘制干扰线</span><br><span class="line">        for (let i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">          ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)</span><br><span class="line">          ctx.beginPath()</span><br><span class="line">          ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))</span><br><span class="line">          ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))</span><br><span class="line">          ctx.stroke()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      drawDot (ctx) &#123;</span><br><span class="line">        // 绘制干扰点</span><br><span class="line">        for (let i = 0; i &lt; 30; i++) &#123;</span><br><span class="line">          ctx.fillStyle = this.randomColor(0, 255)</span><br><span class="line">          ctx.beginPath()</span><br><span class="line">          ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)</span><br><span class="line">          ctx.fill()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      identifyCode () &#123;</span><br><span class="line">        this.drawPic()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted () &#123;</span><br><span class="line">      this.drawPic()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Login-vue"><a href="#Login-vue" class="headerlink" title="Login.vue"></a>Login.vue</h2><p>在login的page代码中将验证码加入表单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;验证码&quot; prop=&quot;validate&quot;&gt;</span><br><span class="line">    &lt;el-input class=&quot;aric-yanzheng&quot; placeholder=&quot;请输入验证码&quot; type=&quot;text&quot; v-model=&quot;loginForm.validate&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;div class=&quot;login-code&quot; @click=&quot;refreshCode&quot;&gt;</span><br><span class="line">        &lt;Identify :identifyCode=&quot;identifyCode&quot;&gt;&lt;/Identify&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p>login的JS部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Identify</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Identify.vue&#x27;</span>;</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">validateVerifycode</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!value) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;请输入验证码&#x27;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value != <span class="variable language_">this</span>.<span class="property">identifyCode</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;validateVerifycode:&#x27;</span>, value)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">validate</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">refreshCode</span>()</span><br><span class="line">            <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;验证码不正确!&#x27;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>并加入随机数生成、验证码更新和生成图像的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">randomNum</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min) + min)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">refreshCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">identifyCode</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">makeCode</span>(<span class="variable language_">this</span>.<span class="property">identifyCodes</span>, <span class="number">4</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">makeCode</span>(<span class="params">o, l</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; l; i++) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">identifyCode</span> += <span class="variable language_">this</span>.<span class="property">identifyCodes</span>[</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">randomNum</span>(<span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">identifyCodes</span>.<span class="property">length</span>)</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>样式部分自由发挥就好~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端の杂七杂八</title>
      <link href="/blog/2022/05/15/%E5%89%8D%E7%AB%AF%E3%81%AE%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
      <url>/blog/2022/05/15/%E5%89%8D%E7%AB%AF%E3%81%AE%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  一些感觉没必要自己单开一篇来写的生活小技巧（bushi</p></blockquote><h2 id="Github项目管理逻辑"><a href="#Github项目管理逻辑" class="headerlink" title="Github项目管理逻辑"></a>Github项目管理逻辑</h2><p><a href="https://www.cnblogs.com/ealenxie/p/16411189.html#!comments">Dev&#x2F;Test&#x2F;Pro的分支逻辑</a></p><p><a href="https://blog.csdn.net/qq_42500831/article/details/124989343">冲突的解决方式-简单</a></p><h2 id="响应式布局技巧"><a href="#响应式布局技巧" class="headerlink" title="响应式布局技巧"></a>响应式布局技巧</h2><p><a href="https://juejin.cn/post/6844904173754925063">响应式思路</a></p><p><a href="https://blog.csdn.net/Ldajiangyou/article/details/124005833">px、em、rem、%、vw、vh、vm的区别</a></p><h2 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h2><p><a href="https://blog.csdn.net/scorpion_V/article/details/125563670">有很多示意图的讲解</a></p><p><a href="https://segmentfault.com/a/1190000021883911">属性讲得比较清楚</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue的2与3</title>
      <link href="/blog/2022/05/11/Vue%E7%9A%842%E4%B8%8E3/"/>
      <url>/blog/2022/05/11/Vue%E7%9A%842%E4%B8%8E3/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-Vue3"><a href="#Why-Vue3" class="headerlink" title="Why Vue3?"></a>Why Vue3?</h2><p><strong>响应式系统提升</strong></p><p>vue2在初始化的时候，对data中的每个属性使用definepropery调用getter和setter使之变为响应式对象。如果属性值为对象，还会递归调用defineproperty使之变为响应式对象。</p><p>vue3使用<code>proxy</code>对象重写响应式。proxy的性能本来比defineproperty好，proxy可以拦截属性的访问、赋值、删除等操作，不需要初始化的时候遍历所有属性，另外有多层属性嵌套的话，只有访问某个属性的时候，才会递归处理下一级的属性。</p><p>新的观察者还提供了一个创建可观察对象的 API。对于中小型应用来说，这个 API 能提供一个轻量、简单的跨组件状态管理方案。 不可变的可观察对象（Immutable observable）。我们可以给一个值创建多个不可变的版本，以防有人修改其属性，必须要在系统在内部临时将其解锁时才能修改其属性。这个机制能够用于冻结传给子组件的属性或者冻结 Vuex 状态树之外的状态变更。 更强大的 debug 能力。我们使用新的 renderTracked 和 renderTriggered 钩子来精确地查明一个组件的 render 是在什么时候由谁触发的。</p><p><strong>编译优化</strong></p><p>编译出的内容对 tree-shaking 友好，更多 AOT 优化，更好的错误提示，对 source map 的支持更好。</p><p>且体积更小、速度更快，源码中删除不常用内容，提升整体速度。</p><p><strong>TS优势</strong>：可以参见<a href="https://hiyoiria.github.io/blog/2022/08/30/TypeScript-%E5%85%A5%E9%97%A8/">我自己整理的TS入门笔记</a></p><h2 id="Vue3使用"><a href="#Vue3使用" class="headerlink" title="Vue3使用"></a>Vue3使用</h2><p>还没整理完 感觉主要还是看尤雨溪已经给出的那一套..orz</p><hr><p>参考：<a href="https://blog.csdn.net/weixin_43638968/article/details/108800361?spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-108800361-blog-125623259.t5_download_all&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-108800361-blog-125623259.t5_download_all&utm_relevant_index=9">Vue3与2的区别</a>、<a href="https://mp.weixin.qq.com/s?__biz=MzAxODE4MTEzMA==&chksm=83db8ecfb4ac07d9d833694017bafda4c13e03bc58addd5990bf30ff9b98752759e541d46425&idx=1&mid=2650084266&scene=21&sn=58f14236bcf9b99fdd4269bac5ca634d#wechat_redirect">Vue3学习记录</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript入门</title>
      <link href="/blog/2022/05/09/TypeScript%E5%85%A5%E9%97%A8/"/>
      <url>/blog/2022/05/09/TypeScript%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="TS是什么"><a href="#TS是什么" class="headerlink" title="TS是什么"></a>TS是什么</h2><p>TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。</p><p>既然提到了JS，那不得不呈现以下与JS的区别：</p><p><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220902210027953.png" alt="image-20220902210027953"></p><p>二者在实际使用上的区别：</p><ul><li><p>JavaScript 非常适合更简单的应用程序，因为它可以在所有平台（跨平台）上运行并且非常轻量级。另外，与JS的最小开销相比，编译TS代码需要的时间和CPU资源对项目而言会更麻烦。</p></li><li><p>但TS 使代码重构变得更加容易，并且更强调显式类型，使开发人员能够掌握各种组件的交互方式。由于它支持编译时调试，对于处理大型复杂应用程序的团队来说，有一定的好处。</p></li></ul><h2 id="TS使用"><a href="#TS使用" class="headerlink" title="TS使用"></a>TS使用</h2><p><strong>安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g typescript</span><br></pre></td></tr></table></figure><p><strong>编译</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tsc helloworld.ts</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">helloworld.ts =&gt; helloworld.js</span></span><br></pre></td></tr></table></figure><p>编译案例</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">greet</span>(<span class="params">person: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;Hello, &#x27;</span> + person;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">greet</span>(<span class="string">&quot;TypeScript&quot;</span>));</span><br></pre></td></tr></table></figure><p>执行 <code>tsc hello.ts</code> 命令，之后会生成一个编译好的文件 <code>hello.js</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">greet</span>(<span class="params">person</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;Hello, &#x27;</span> + person;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">greet</span>(<span class="string">&quot;TypeScript&quot;</span>));</span><br></pre></td></tr></table></figure><p><strong>变量</strong></p><p>严格的变量声明</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="attr">name2</span>:<span class="built_in">string</span> = <span class="string">&quot;shasha&quot;</span>; <span class="comment">// 不能给字符串类型变量赋值数字</span></span><br><span class="line"><span class="keyword">var</span> alias3 = <span class="string">&#x27;xx&#x27;</span>; </span><br><span class="line">alias3 = <span class="number">13</span>;  <span class="comment">// 推断机制，第一次赋值的类型就是默认变量类型</span></span><br><span class="line"><span class="keyword">var</span> <span class="attr">alias4</span>:<span class="built_in">any</span> = <span class="string">&#x27;xixix&#x27;</span>  <span class="comment">// any的含义是可以给变量赋值任何值</span></span><br><span class="line">alias4 = <span class="number">14</span>;</span><br></pre></td></tr></table></figure><p><strong>语法</strong></p><p>TypeScript支持与JavaScript几乎相同的数据类型，此外还提供了实用的枚举类型方便我们使用。</p><p>enum 类型是对 JavaScript 标准数据类型的一个补充。使用枚举类型可以为一组<code>数值</code>赋予名字&#96;。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;</span><br><span class="line">  <span class="title class_">Red</span>,</span><br><span class="line">  <span class="title class_">Green</span>,</span><br><span class="line">  <span class="title class_">Blue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 枚举数值默认从0开始依次递增</span></span><br><span class="line"><span class="comment">// 根据特定的名称得到对应的枚举数值</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">myColor</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>  <span class="comment">// 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myColor, <span class="title class_">Color</span>.<span class="property">Red</span>, <span class="title class_">Color</span>.<span class="property">Blue</span>)</span><br></pre></td></tr></table></figure><p>枚举类型提供的一个便利是你可以由枚举的值得到它的名字。例如，我们知道数值为 2，但是不确定它映射到 Color 里的哪个名字，可以查找相应的名字</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123;<span class="title class_">Red</span> = <span class="number">1</span>, <span class="title class_">Green</span>, <span class="title class_">Blue</span>&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">colorName</span>: <span class="built_in">string</span> = <span class="title class_">Color</span>[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(colorName)  <span class="comment">// &#x27;Green&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>函数</strong></p><img src="C:\Users\Hiyoiria\AppData\Roaming\Typora\typora-user-images\image-20220902210851178.png" alt="image-20220902210851178" style="zoom: 67%;" /><p>三点运算符</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用来声明任意数量的方法参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params">...args</span>)&#123;</span><br><span class="line">    args.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">arg</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arg)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun1</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"><span class="title function_">fun1</span>(<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p><strong>面向对象</strong></p><p>其实这一部分倒是和Java很像，不得不说可能TS比JS更”Java”~</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Greeter</span> &#123;</span><br><span class="line">  <span class="comment">// 静态属性</span></span><br><span class="line">  <span class="keyword">static</span> <span class="attr">cname</span>: <span class="built_in">string</span> = <span class="string">&quot;Greeter&quot;</span>;</span><br><span class="line">  <span class="comment">// 成员属性</span></span><br><span class="line">  <span class="attr">greeting</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="comment">// 构造函数 - 执行初始化操作</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">message: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">greeting</span> = message;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 静态方法</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">getClassName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Class name is Greeter&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 成员方法</span></span><br><span class="line">  <span class="title function_">greet</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello, &quot;</span> + <span class="variable language_">this</span>.<span class="property">greeting</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> greeter = <span class="keyword">new</span> <span class="title class_">Greeter</span>(<span class="string">&quot;world&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>模块化</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span> <span class="title class_">Validation</span> &#123;   <span class="comment">//定义模块</span></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">StringValidator</span> &#123;  <span class="comment">//声明接口对外部可以使用</span></span><br><span class="line">    <span class="title function_">isAcceptable</span>(<span class="attr">s</span>: <span class="built_in">string</span>): <span class="built_in">boolean</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> lettersRegexp = <span class="regexp">/^[A-Za-z]+$/</span>;</span><br><span class="line">  <span class="keyword">var</span> numberRegexp = <span class="regexp">/^[0-9]+$/</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LettersOnlyValidator</span> <span class="keyword">implements</span> <span class="title class_">StringValidator</span> &#123;  <span class="comment">//声明类对外部可用</span></span><br><span class="line">    <span class="title function_">isAcceptable</span>(<span class="params">s: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> lettersRegexp.<span class="title function_">test</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ZipCodeValidator</span> <span class="keyword">implements</span> <span class="title class_">StringValidator</span> &#123;</span><br><span class="line">    <span class="title function_">isAcceptable</span>(<span class="params">s: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> s.<span class="property">length</span> === <span class="number">5</span> &amp;&amp; numberRegexp.<span class="title function_">test</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>参考：<a href="https://blog.csdn.net/gao511147456/article/details/125809525">https://blog.csdn.net/gao511147456/article/details/125809525</a></p><p><a href="http://semlinker.com/ts-comprehensive-tutorial/">了不起的 TypeScript 入门教程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的Vscode配置</title>
      <link href="/blog/2022/05/06/%E6%88%91%E7%9A%84Vscode%E9%85%8D%E7%BD%AE/"/>
      <url>/blog/2022/05/06/%E6%88%91%E7%9A%84Vscode%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>新版Vscode设置默认为UI的设置，而非之前的json设置，因此需要<code>文件&gt;首选项&gt;设置 &gt; 搜索workbench.settings.editor，选中json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;files.associations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;*.vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;*.wpy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;*.wxml&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;*.wxss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;css&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.shell.windows&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;git.enableSmartCommit&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;git.autofetch&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.triggerExpansionOnTab&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.showAbbreviationSuggestions&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.showExpandedAbbreviation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.includeLanguages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;vue-html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;wpy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">//主题颜色 </span></span><br><span class="line">  <span class="comment">//&quot;workbench.colorTheme&quot;: &quot;Monokai&quot;,</span></span><br><span class="line">  <span class="attr">&quot;git.confirmSync&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;explorer.confirmDelete&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window.zoomLevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.wordWrap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.detectIndentation&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 重新设定tabsize</span></span><br><span class="line">  <span class="attr">&quot;editor.tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">//失去焦点后自动保存</span></span><br><span class="line">  <span class="attr">&quot;files.autoSave&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onFocusChange&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// #值设置为true时，每次保存的时候自动格式化；</span></span><br><span class="line">  <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">//每120行就显示一条线</span></span><br><span class="line">  <span class="attr">&quot;editor.rulers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// 在使用搜索功能时，将这些文件夹/文件排除在外</span></span><br><span class="line">  <span class="attr">&quot;search.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;**/node_modules&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/bower_components&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/target&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/logs&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="comment">// 这些文件将不会显示在工作空间中</span></span><br><span class="line">  <span class="attr">&quot;files.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;**/.git&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.svn&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.hg&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/CVS&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/.DS_Store&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/*.js&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;when&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(basename).ts&quot;</span> <span class="comment">//ts编译后生成的js文件将不会显示在工作空中</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;**/node_modules&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="comment">// #让vue中的js按&quot;prettier&quot;格式进行格式化</span></span><br><span class="line">  <span class="attr">&quot;vetur.format.defaultFormatter.html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js-beautify-html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vetur.format.defaultFormatter.js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vetur.format.defaultFormatterOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;js-beautify-html&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="comment">// #vue组件中html代码格式化样式</span></span><br><span class="line">          <span class="attr">&quot;wrap_attributes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;force-aligned&quot;</span><span class="punctuation">,</span> <span class="comment">//也可以设置为“auto”，效果会不一样</span></span><br><span class="line">          <span class="attr">&quot;wrap_line_length&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;end_with_newline&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h2><p><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220901142442502.png" alt="image-20220901142442502" style="zoom:33%;" /><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220901142502859.png" alt="image-20220901142502859" style="zoom:33%;" /><img src="https://cdn.jsdelivr.net/gh/hiyoiria/Blogimage@main/img/image-20220901142517796.png" alt="image-20220901142517796" style="zoom:33%;" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> Tech </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>seaborn笔记</title>
      <link href="/blog/2022/03/03/seaborn%E7%AC%94%E8%AE%B0/"/>
      <url>/blog/2022/03/03/seaborn%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello there</title>
      <link href="/blog/2018/02/25/hello_there/"/>
      <url>/blog/2018/02/25/hello_there/</url>
      
        <content type="html"><![CDATA[<blockquote><p>  This introduction was posted in my teen era. Migration for memorisation.</p></blockquote><p>Hello? 有人在吗?<br>我是IRIA! 来自长郡中学2016级<br>自认为是并不算现役OIER的一条咸鱼<br>很高兴认识屏幕那边的你</p><p>喜欢读的 -&gt; 奥威尔&#x2F;张爱玲&#x2F;狄更斯&#x2F;汪曾祺<br>喜欢的听的 -&gt; Fukase&#x2F;阿信&#x2F;Mili&#x2F;东方纯音&#x2F;东方土嗨<br>喜欢的人 -&gt; 二宫和也&#x2F;心华&#x2F;黄少天&#x2F;Moriarty&#x2F;王也&#x2F;碳化太太&#x2F;Deco&#x2F;Akatin&#x2F;最近入坑周棋洛<br>喜欢的事 -&gt; 码我前言不搭后语的文&#x2F;调我电音特别重还不会混音的Vocaloid&#x2F;练我的伦敦乡村英语&#x2F;颓&#x2F;颓&#x2F;颓&#x2F;颓</p><p>折原临也是许多年的本命！</p><p>QQ：531263155 不善于交友但乐于交流(:з」∠)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>公牛与状压dp</title>
      <link href="/blog/2017/02/25/%E5%85%AC%E7%89%9B%E4%B8%8E%E7%8A%B6%E5%8E%8Bdp/"/>
      <url>/blog/2017/02/25/%E5%85%AC%E7%89%9B%E4%B8%8E%E7%8A%B6%E5%8E%8Bdp/</url>
      
        <content type="html"><![CDATA[<p>T1 疾病管理<br>裸得不能再裸的状压dp 不过数据范围骗人<br>考试时k&#x3D;&#x3D;0的点没过 我也很无奈呀qwq</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int g[2000],f[1&lt;&lt;17];</span><br><span class="line">int pd(int x)&#123;</span><br><span class="line">int tot=0;</span><br><span class="line">while (x)&#123;</span><br><span class="line">if (x&amp;1) tot++;</span><br><span class="line">x&gt;&gt;=1;</span><br><span class="line">&#125;</span><br><span class="line">return tot;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">freopen (&quot;disease.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen (&quot;disease.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">int n,d,k,sum=0;</span><br><span class="line">scanf (&quot;%d%d%d&quot;,&amp;n,&amp;d,&amp;k);</span><br><span class="line">for (int i=1;i&lt;=n;++i)&#123;</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;x);</span><br><span class="line">if (x==0) sum++;</span><br><span class="line">for (int j=1;j&lt;=x;++j)&#123;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;y);</span><br><span class="line">    g[i]|=(1&lt;&lt;y-1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1;i&lt;(1&lt;&lt;d);++i)</span><br><span class="line">&#123;</span><br><span class="line">if (pd(i)&lt;=k)</span><br><span class="line">for (int j=1;j&lt;=n;++j)&#123;</span><br><span class="line">if (g[j]&amp;(~(g[j]&amp;i))) continue;</span><br><span class="line">//如果这个公牛的疾病未完全被包含在此状态中 就跳过</span><br><span class="line">f[i]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int ans=0;</span><br><span class="line">for (int i=1;i&lt;(1&lt;&lt;d);++i) ans=max(ans,f[i]);</span><br><span class="line">if (k==0) ans=max(ans,sum);</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>T2 安排公牛<br>考场上玄学dfs胡乱搞到70<br>然而大家似乎都是随手就80了（无奈脸x2<br>看到&lt;&#x3D;20的友好范围想着要状压 然而 越想越复杂了（老毛病<br>正解依旧dp<br>要注意0也是一种状态 对 什么都不放也是一种状态qwq<br><del>大概就是类似于“无即万物“的思想</del><br>感谢超级厉害的csy大佬不嫌我蠢跟我讲了几遍</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">int x[30][30];</span><br><span class="line">int dp[1&lt;&lt;20];</span><br><span class="line">int n,m,ans=0;</span><br><span class="line">int main()&#123;</span><br><span class="line">freopen (&quot;examnine.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen (&quot;examnine.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">int sum=0;</span><br><span class="line">for (int i=1;i&lt;=n;++i)&#123;</span><br><span class="line">int xx,y;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;xx);</span><br><span class="line">for (int j=1;j&lt;=xx;++j)&#123;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;y);</span><br><span class="line">x[i][y]=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dp[0]=1;</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">for (int j=(1&lt;&lt;m)-1;j&gt;=0;--j)&#123;</span><br><span class="line">if (!dp[j]) continue;</span><br><span class="line">for (int k=1;k&lt;=m;++k)&#123;</span><br><span class="line">if (!x[i][k]) continue;</span><br><span class="line">if (j&amp;(1&lt;&lt;k-1)) continue;</span><br><span class="line">dp[j|(1&lt;&lt;k-1)]+=dp[j];</span><br><span class="line">&#125;</span><br><span class="line">dp[j]=0;</span><br><span class="line">&#125;</span><br><span class="line">for (int i=0;i&lt;=(1&lt;&lt;m)-1;++i) ans+=dp[i];</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>以后碰到感觉不怎么好打的dp<br>一定要认真分析时间复杂度<br>敢于dfs（逃</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>八数码难题</title>
      <link href="/blog/2017/02/22/%E5%85%AB%E6%95%B0%E7%A0%81%E9%9A%BE%E9%A2%98/"/>
      <url>/blog/2017/02/22/%E5%85%AB%E6%95%B0%E7%A0%81%E9%9A%BE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>思考还是不周到 没有考虑到0的那种情况<br>谢谢出数据的人<del>(和善的微笑)</del></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#define N 600000</span><br><span class="line">using namespace std;</span><br><span class="line">int fac[9]=&#123;1,1,2,6,24,120,720,5040,40320&#125;;</span><br><span class="line">int st[N][9],z[9],d[N],zz,dis[N],fa[N];</span><br><span class="line">int y[5]=&#123;0,3,-3,1,-1&#125;;</span><br><span class="line">int vis[N];</span><br><span class="line">int kt(int s[])&#123;</span><br><span class="line">int t;</span><br><span class="line">int sum=0;</span><br><span class="line">for (int i=0;i&lt;=8;++i)&#123;</span><br><span class="line">t=0;</span><br><span class="line">for (int j=i+1;j&lt;=8;++j)</span><br><span class="line">if (s[j]&lt;s[i]) t++;</span><br><span class="line">sum+=t*fac[8-i];</span><br><span class="line">&#125;</span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line">void nkt(int x);</span><br><span class="line">int bfs()&#123;</span><br><span class="line">int h=0,t=1;</span><br><span class="line">while (h&lt;t)&#123;</span><br><span class="line">h++;</span><br><span class="line">vis[d[h]]=1;</span><br><span class="line">if (d[h]==zz) return d[h];</span><br><span class="line">int x;</span><br><span class="line">for (x=0;x&lt;=8;++x) if (st[h][x]==0) break;</span><br><span class="line">for (int i=1;i&lt;=4;++i)&#123;</span><br><span class="line">if (0&lt;=x+y[i]&amp;&amp;x+y[i]&lt;=8)&#123;</span><br><span class="line">if ((x==2||x==5)&amp;&amp;y[i]==1) continue;</span><br><span class="line">if ((x==3||x==6)&amp;&amp;y[i]==-1) continue;</span><br><span class="line">int l=st[h][x+y[i]];</span><br><span class="line">t++;</span><br><span class="line">for (int j=0;j&lt;=8;++j) st[t][j]=st[h][j];</span><br><span class="line">st[t][x]=l,st[t][x+y[i]]=0;</span><br><span class="line">d[t]=kt(st[t]);</span><br><span class="line">if (vis[d[t]]) t--;</span><br><span class="line">else&#123;</span><br><span class="line">dis[d[t]]=dis[d[h]]+1;</span><br><span class="line">fa[d[t]]=d[h];&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">void nkt(int x)&#123;</span><br><span class="line">bool viss[10]=&#123;0&#125;;</span><br><span class="line">int t;</span><br><span class="line">for (int i=0;i&lt;=8;++i)&#123;</span><br><span class="line">t=x/fac[8-i];</span><br><span class="line">x%=fac[8-i];</span><br><span class="line">int j;</span><br><span class="line">for (j=0;j&lt;=8;++j)</span><br><span class="line">if (!viss[j])&#123;</span><br><span class="line">if (!t) break;</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;j;</span><br><span class="line">viss[j]=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void pr(int x)&#123;</span><br><span class="line">if (!fa[x]) return ;</span><br><span class="line">pr(fa[x]);</span><br><span class="line">nkt(x);</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">//freopen (&quot;bsm.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">//freopen (&quot;bsm.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">for (int i=0;i&lt;=8;++i) scanf (&quot;%d&quot;,&amp;st[1][i]);</span><br><span class="line">for (int i=0;i&lt;=8;++i) scanf (&quot;%d&quot;,&amp;z[i]);</span><br><span class="line">d[1]=kt(st[1]);</span><br><span class="line">vis[d[1]]=1;</span><br><span class="line">zz=kt(z);</span><br><span class="line">if (d[1]==zz)&#123;</span><br><span class="line">cout&lt;&lt;0;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">int num=bfs();</span><br><span class="line">if (num)&#123;</span><br><span class="line"> cout&lt;&lt;dis[num]&lt;&lt;endl;</span><br><span class="line"> nkt(d[1]);</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> pr(num);</span><br><span class="line">&#125;</span><br><span class="line">else cout&lt;&lt;-1;</span><br><span class="line">return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为了学康托和逆康托强行都用了qaq<br>然而似乎只用康托？<br>这样使得我的时间非常不优秀 &#x3D; A &#x3D;<br>关于康托<br>就是求一个序列在原本这么多数的全排列中的序号<br>这样就能保证八数码移动到的每个序列都有独有的值<br>方便判重<br>应该是比stl快一点的但我似乎打丑了qwq<br>具体实现可以百度呀OvO<br>其实我是仗着上次看了半个小时nextpermutation所以压根没仔细算qwq</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>黑白棋游戏</title>
      <link href="/blog/2017/02/21/%E9%BB%91%E7%99%BD%E6%A3%8B%E6%B8%B8%E6%88%8F/"/>
      <url>/blog/2017/02/21/%E9%BB%91%E7%99%BD%E6%A3%8B%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>二进制串的储存是个细节比较多的问题qaq<br>然后各个位置的查询也有些地方要注意<br>这次真的是改到吐了qwq</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">int t[1&lt;&lt;18],fax[1&lt;&lt;18],fay[1&lt;&lt;18],fa[1&lt;&lt;18],y[1&lt;&lt;18],a[20];</span><br><span class="line">bool vis[1&lt;&lt;20];</span><br><span class="line">void cou(int x)&#123;</span><br><span class="line">int t1=x/4+1,t2=x%4+1;</span><br><span class="line">cout&lt;&lt;t1&lt;&lt;&quot; &quot;&lt;&lt;t2&lt;&lt;&quot; &quot;;</span><br><span class="line">&#125;</span><br><span class="line">void pr(int x)&#123;</span><br><span class="line">if (!fa[x]) return ;</span><br><span class="line">pr(fa[x]);</span><br><span class="line">cou(fax[x]),cou(fay[x]);</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">int x;</span><br><span class="line">int ch=0,zh=0;</span><br><span class="line">for (int i=1;i&lt;=16;++i) scanf (&quot;%1d&quot;,&amp;a[i]);</span><br><span class="line">for (int i=16;i&gt;=1;--i)&#123;</span><br><span class="line">    ch&lt;&lt;=1;</span><br><span class="line">     ch|=a[i];</span><br><span class="line">&#125;</span><br><span class="line">    for (int i=1;i&lt;=16;++i) scanf (&quot;%1d&quot;,&amp;a[i]);</span><br><span class="line">for (int i=16;i&gt;=1;--i)&#123;</span><br><span class="line">    zh&lt;&lt;=1;</span><br><span class="line">    zh|=a[i];</span><br><span class="line">&#125;</span><br><span class="line">    t[1]=ch;</span><br><span class="line">int h=0,ta=1,q,p;</span><br><span class="line">while (h&lt;ta)&#123;</span><br><span class="line">int x=t[++h];</span><br><span class="line">vis[x]=1;</span><br><span class="line">int flag=0;</span><br><span class="line">int to=ch;</span><br><span class="line">for (int i=0;i&lt;16;++i)&#123;</span><br><span class="line">if (i&lt;12) &#123;</span><br><span class="line">if ((x&amp;(1&lt;&lt;i))&amp;&amp;(!(x&amp;(1&lt;&lt;i+4)))) to=x&amp;(~(1&lt;&lt;i)),to|=(1&lt;&lt;i+4);</span><br><span class="line">else if ((x&amp;(1&lt;&lt;i+4))&amp;&amp;(!(x&amp;(1&lt;&lt;i)))) to=x&amp;(~(1&lt;&lt;i+4)),to|=(1&lt;&lt;i);</span><br><span class="line">if (!vis[to]) t[++ta]=to,vis[to]=1,fa[to]=x,fax[to]=i,fay[to]=i+4,y[to]=y[x]+1;</span><br><span class="line">&#125;</span><br><span class="line">if (to==zh)&#123;flag=1;break;&#125;</span><br><span class="line">if (i!=3&amp;&amp;i!=7&amp;&amp;i!=11&amp;&amp;i!=15)&#123;</span><br><span class="line">if ((x&amp;(1&lt;&lt;i))&amp;&amp;(!(x&amp;(1&lt;&lt;i+1)))) to=x&amp;(~(1&lt;&lt;i)),to|=(1&lt;&lt;i+1);</span><br><span class="line">else if ((x&amp;(1&lt;&lt;i+1))&amp;&amp;(!(x&amp;(1&lt;&lt;i)))) to=x&amp;(~(1&lt;&lt;i+1)),to|=(1&lt;&lt;i);</span><br><span class="line">if (!vis[to]) t[++ta]=to,vis[to]=1,fa[to]=x,fax[to]=i,fay[to]=i+1,y[to]=y[x]+1;</span><br><span class="line">&#125;</span><br><span class="line">if (to==zh)&#123;flag=1;break;&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (flag) &#123;q=to;break;&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;y[q]&lt;&lt;endl;</span><br><span class="line">    pr(q);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Game—围圈比赛</title>
      <link href="/blog/2017/02/18/Game%E2%80%94%E5%9B%B4%E5%9C%88%E6%AF%94%E8%B5%9B/"/>
      <url>/blog/2017/02/18/Game%E2%80%94%E5%9B%B4%E5%9C%88%E6%AF%94%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>我们在生命的路上常常绝望 大概是因为弯路走了太多<br>脚上的泡被磨起又磨破<br>像我们所有的幻想与梦 起起落落。</p><hr><p>所以说 我这道题考场上面和题解想得一模一样啊啊啊啊啊啊啊啊啊啊！！！！！！<br>但是就是打复杂了啊啊啊啊啊啊啊啊！！！！！！！！！！！！！！！！！！！！<br>为什么我每次一看到环就感觉自己被耍了啊啊啊啊啊啊！！！！！！<br>自己的写法大概是有一个head tail记录环的首尾这样比较的时候就可以方便跳 然后我还加了一个-1的处理保证被合并了的不再被处理<br>考场上改了蛮久不过最后还是爆零啦<br>标程给出的方法是用了一个l数组和一个r数组<br>这个数被合并了就把它的r赋给左边的r<br>就相当于通过lr的操作把它挤掉<br>好无奈啊这么简单又机智的办法我居然没想到<br>因为lr数组那边处理起来还是有点问题所以标解是手打快排了的<br>这是标解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;ctime&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#define inf 2147483647</span><br><span class="line">#define fre(z) freopen(z&quot;.in&quot;,&quot;r&quot;,stdin),freopen(z&quot;.out&quot;,&quot;w&quot;,stdout)</span><br><span class="line">#define my long long</span><br><span class="line">#define d &quot;%lld&quot;</span><br><span class="line">using namespace std;</span><br><span class="line">const my N=100000;</span><br><span class="line">my getint();</span><br><span class="line">my n;</span><br><span class="line">my a[N+1];</span><br><span class="line">my w[N+1];</span><br><span class="line">my l[N+1],r[N+1];</span><br><span class="line">my ans;</span><br><span class="line">void qsort(my,my);</span><br><span class="line">////////////在一个环中每次选择两个相邻元素，分数加上两个元素之差，然后把小的元素移除，问分数之和的最小值是多少</span><br><span class="line">////////////贪心</span><br><span class="line">//证明：</span><br><span class="line">//对于当前环中最小值k以及k的相邻两个元素k_l,k_r </span><br><span class="line">//把他与相邻数操作后一定是自己移除</span><br><span class="line">//然后每次合并后留下的是最大值 </span><br><span class="line">//所以如果先合并k_l及k_l左边的元素或k_r及k_r右边的元素，那么合并后k相邻两个元素的值&gt;=k_l,k_r</span><br><span class="line">//所以首先合并k_l或k_r肯定更优</span><br><span class="line">//然后肯定要合并min(k_l,k_r)</span><br><span class="line">//然后直接删除k即可 </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">fre(&quot;game&quot;);</span><br><span class="line">n=getint();</span><br><span class="line">for (my i=1;i&lt;=n;i++) w[i]=i,a[i]=getint(),l[i]=i-1,r[i]=i+1;</span><br><span class="line">l[1]=n;r[n]=1;</span><br><span class="line">qsort(1,n);</span><br><span class="line">for (my T=1;T&lt;n;T++) &#123;</span><br><span class="line">my i=w[T];</span><br><span class="line">cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;l[i]&lt;&lt;&quot; &quot;&lt;&lt;r[i]&lt;&lt;&quot; &quot;&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">ans+=min(a[l[i]],a[r[i]])-a[i];</span><br><span class="line">l[r[i]]=l[i];r[l[i]]=r[i];</span><br><span class="line">&#125;</span><br><span class="line">printf(d,ans);</span><br><span class="line">      return 0;</span><br><span class="line">&#125;</span><br><span class="line">my getint()</span><br><span class="line">&#123;</span><br><span class="line">      my w=0;</span><br><span class="line">int q=0;</span><br><span class="line">char c=getchar();</span><br><span class="line">while ((c&lt;&#x27;0&#x27;||c&gt;&#x27;9&#x27;) &amp;&amp; c!=&#x27;-&#x27;) c=getchar();</span><br><span class="line">if (c==&#x27;-&#x27;) q=1,c=getchar();</span><br><span class="line">      while (c&gt;=&#x27;0&#x27;&amp;&amp;c &lt;= &#x27;9&#x27;) w=w*10+c-&#x27;0&#x27;,c=getchar();</span><br><span class="line">return q? -w:w;</span><br><span class="line">&#125;</span><br><span class="line">void qsort(my l,my r)</span><br><span class="line">&#123;</span><br><span class="line">my i=l,j=r,mid=a[w[(i+j)&gt;&gt;1]];</span><br><span class="line">while (i&lt;=j) &#123;</span><br><span class="line">while (a[w[i]]&lt;mid) i++;</span><br><span class="line">while (a[w[j]]&gt;mid) j--;</span><br><span class="line">if (i&lt;=j) &#123;</span><br><span class="line">w[0]=w[i];</span><br><span class="line">w[i]=w[j];</span><br><span class="line">w[j]=w[0];</span><br><span class="line">i++;</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (i&lt;r) qsort(i,r);</span><br><span class="line">if (l&lt;j) qsort(l,j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而作为一个彻头彻尾stl党很不服气<br>于是强行一波</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define N 100030</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">struct hh</span><br><span class="line">&#123;</span><br><span class="line">ll v,id,l,r;</span><br><span class="line">&#125;a[N];</span><br><span class="line">ll ans=0,n;</span><br><span class="line">ll b[N];</span><br><span class="line">bool cmp(hh x,hh y)&#123;return x.v&lt;y.v;&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">freopen (&quot;game.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen (&quot;game.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;n);</span><br><span class="line">for (int i=1;i&lt;=n;++i)&#123;</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;a[i].v);</span><br><span class="line">a[i].id=i,a[i].l=i-1,a[i].r=i+1;</span><br><span class="line">&#125;</span><br><span class="line">a[1].l=n,a[n].r=1;</span><br><span class="line">sort(a+1,a+n+1,cmp);</span><br><span class="line">for (int i=1;i&lt;=n;++i) b[a[i].id]=i;</span><br><span class="line">for (int i=1;i&lt;n;++i)&#123;</span><br><span class="line">ans+=min(a[b[a[i].l]].v,a[b[a[i].r]].v)-a[i].v;</span><br><span class="line">a[b[a[i].r]].l=a[i].l,a[b[a[i].l]].r=a[i].r;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么这个悲惨的故事告诉我们处理问题的时候尽量简化<br>因为想多了要处理的细节多了反而瞬间爆炸<br>还不如把事情最简化一下</p>]]></content>
      
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>set</title>
      <link href="/blog/2017/02/18/set/"/>
      <url>/blog/2017/02/18/set/</url>
      
        <content type="html"><![CDATA[<p>所以说不要以为前一天考了什么后一天就不会考这类的东西了<br>出题人总是能竭尽所能<br>打破你的下限qaq<br>naive</p><hr><p><img src="http://img.blog.csdn.net/20170218094442590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSVJJQV8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="我是题目"></p><hr><p>我本来是以为昨天已经考过一道大家什么都没学的数学题<br>这事儿就这么完了<br>可惜没有qwq<br>解释一部分来自题解 一部分来自自己<br>写写划划试几个小的数据应该有助于理解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">#define maxn 100100</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=(1000000000+7);</span><br><span class="line">ll jc[maxn];</span><br><span class="line">ll qpow(ll x,ll y)&#123;</span><br><span class="line">ll ans=1;</span><br><span class="line">for (;y;y&gt;&gt;=1,x*=x)&#123;x%=mod;  if (y&amp;1) ans*=x; ans%=mod;&#125;</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">ll inv(ll a)&#123;</span><br><span class="line">return qpow(a,mod-2);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">//freopen (&quot;set.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">//freopen (&quot;set1.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">int n;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">jc[0]=1;</span><br><span class="line">/*设最后都收束为p，显然f(p)=p。</span><br><span class="line">设有L个f(x)=p，除了p还要任选L-1个，</span><br><span class="line">剩下n-L个都要在这L-1个位置中任取。枚举L，</span><br><span class="line">复杂度O(n)   f(n-L) -&gt; L-1种值*/</span><br><span class="line">for (int i=1;i&lt;=n;++i) jc[i]=(jc[i-1]*i)%mod;</span><br><span class="line">ll ans=0;</span><br><span class="line">for (int l=1;l&lt;=n;++l)&#123;</span><br><span class="line">//n-1里选l-1个数u</span><br><span class="line">ll as=jc[n-1]*inv(jc[l-1])%mod*inv(jc[n-l])%mod;</span><br><span class="line">    //把n-l个数放进l-1个位置里</span><br><span class="line">ll am=qpow(l-1,n-l);</span><br><span class="line">ans=(as*am%mod)+ans;</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans*n%mod;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后这次求逆元用的是费马小定理 (其实上次也可以<br>快速幂打wa+mod 没打括号改了40分钟也是没谁了(仰胁息<br>考场想出了组合然而那时候也是不会逆元的<br>也不知道可以quickpow一下(sb<br>感觉解释还是讲得满清楚的<br>一定记得有事没事就膜膜膜<br><del>(gouliguojia)</del><br>为出题人+1s</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>售货员的难题</title>
      <link href="/blog/2017/02/18/%E5%94%AE%E8%B4%A7%E5%91%98%E7%9A%84%E9%9A%BE%E9%A2%98/"/>
      <url>/blog/2017/02/18/%E5%94%AE%E8%B4%A7%E5%91%98%E7%9A%84%E9%9A%BE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20170218162459277?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSVJJQV8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="题目桑"><br>虽然设定里n是到40可是很明显40是带不动的<br>初步估计40！<br>求最短路径又很明显不是图论类的于是想到<br>####贪心 dp bfs<br>尽管老师说搜索是可以的然而我是个搜索废<br>滚去写dp<br>一开始按大白上面的那道题的思路走的 感觉比较不顺手<br>可自己也码不动（太弱啦<br>考虑为什么不在自己的状态内进行转移（可是还是不会打<br>于是很怂逼去看了题解<br>嗯这就是我要的（<del>滑板鞋</del>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int w[30][30];</span><br><span class="line">int len[30];</span><br><span class="line">int s[1100000][20];</span><br><span class="line">int main()&#123;</span><br><span class="line">freopen (&quot;shou.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen (&quot;shou.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">int n;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">int x;</span><br><span class="line">//初始化 毕竟后面求最小值</span><br><span class="line">memset(w,0x3f,sizeof(w));</span><br><span class="line">memset(s,0x3f,sizeof(s));</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">for (int j=1;j&lt;=n;++j)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;x);</span><br><span class="line">if (x) w[i][j]=x;</span><br><span class="line">&#125;</span><br><span class="line">s[1][1]=0;</span><br><span class="line">x=(1&lt;&lt;n)-1;//最终状态</span><br><span class="line">for (int i=3;i&lt;=x;i+=2)//枚举状态</span><br><span class="line">for (int v=1;v&lt;=n;++v)&#123;</span><br><span class="line">if (i&amp;(1&lt;&lt;v-1))&#123;</span><br><span class="line">for (int j=2;j&lt;=n;++j)//枚举两个状态中的点</span><br><span class="line">if (v!=j&amp;&amp;(i&amp;(1&lt;&lt;j-1)))&#123;</span><br><span class="line">                       int k=i&amp;(~(1&lt;&lt;j-1));</span><br><span class="line">                       //在后者还未被访问的情况下转移</span><br><span class="line">s[i][j]=min(s[i][j],s[k][v]+w[v][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br><span class="line">    int ans=100000000;</span><br><span class="line">    for (int i=1;i&lt;=n;++i) ans=min(ans,s[x][i]+w[i][1]);</span><br><span class="line">    //走完全程回到起点</span><br><span class="line">    if (ans==100000000) cout&lt;&lt;-1;</span><br><span class="line">else cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这类题目一开始看到肯定会走弯路<br>估计抓破头皮也只能勉强打个疯狂优化的爆搜<br>所以还是要多锻炼思维啊少年<br>很多题目的最优解法往往是和题意不怎么直接相关的qwq</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【HAOI2015】树上操作</title>
      <link href="/blog/2017/02/10/%E3%80%90HAOI2015%E3%80%91%E6%A0%91%E4%B8%8A%E6%93%8D%E4%BD%9C/"/>
      <url>/blog/2017/02/10/%E3%80%90HAOI2015%E3%80%91%E6%A0%91%E4%B8%8A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>bzoj 4034<br>注意longlong 注意数组大小<br>辣鸡线段树大小！！！QAQ</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define N 100002 </span><br><span class="line">#define LL long long</span><br><span class="line">#define ls x&lt;&lt;1</span><br><span class="line">#define rs x&lt;&lt;1|1</span><br><span class="line">using namespace std;</span><br><span class="line">int n,m,tot=0,df=0;</span><br><span class="line">int head[5*N],to[5*N],nxt[5*N],dfn[N];</span><br><span class="line">int sz[N],tp[N],son[N],de[N],fa[N],ed[N];</span><br><span class="line">LL tree[8*N],v[N],lazy[8*N];</span><br><span class="line">void link(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">nxt[++tot]=head[x];</span><br><span class="line">to[tot]=y;</span><br><span class="line">head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">void dfs(int x)</span><br><span class="line">&#123;</span><br><span class="line">sz[x]=1;</span><br><span class="line">for (int i=head[x];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">int t=to[i];</span><br><span class="line">if (t==fa[x]) continue;</span><br><span class="line">de[t]=de[x]+1;</span><br><span class="line">fa[t]=x;</span><br><span class="line">dfs(t);</span><br><span class="line">sz[x]+=sz[t];</span><br><span class="line">if (sz[t]&gt;sz[son[x]]) son[x]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void dfs1(int x,int top)</span><br><span class="line">&#123;</span><br><span class="line">dfn[x]=++df,tp[x]=top;</span><br><span class="line">if (son[x]) dfs1(son[x],top);</span><br><span class="line">for (int i=head[x];i;i=nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">int t=to[i];</span><br><span class="line">if (t==fa[x]||t==son[x]) continue;</span><br><span class="line">dfs1(t,t);</span><br><span class="line">&#125;</span><br><span class="line">ed[x]=df;</span><br><span class="line">&#125;</span><br><span class="line">void down (int x,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">int mid=(r+l)&gt;&gt;1;</span><br><span class="line">tree[ls]+=lazy[x]*(mid-l+1);</span><br><span class="line">tree[rs]+=lazy[x]*(r-mid);</span><br><span class="line">lazy[ls]+=lazy[x];</span><br><span class="line">lazy[rs]+=lazy[x];</span><br><span class="line">lazy[x]=0;</span><br><span class="line">&#125;</span><br><span class="line">void update(int x,int l,int r,int ll,int rr,LL w)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(x,l,r);</span><br><span class="line">if (ll&lt;=l&amp;&amp;r&lt;=rr)</span><br><span class="line">&#123;</span><br><span class="line">tree[x]+=w*(r-l+1);</span><br><span class="line">lazy[x]=w;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (ll&lt;=mid) update(ls,l,mid,ll,rr,w);</span><br><span class="line">if (rr&gt;mid) update(rs,mid+1,r,ll,rr,w);</span><br><span class="line">tree[x]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">LL query(int x,int l,int r,int ll,int rr)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(x,l,r);</span><br><span class="line">if (ll&lt;=l&amp;&amp;r&lt;=rr) return tree[x];</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">LL ans=0;</span><br><span class="line">if (ll&lt;=mid) ans+=query(ls,l,mid,ll,rr);</span><br><span class="line">if (rr&gt;mid) ans+=query(rs,mid+1,r,ll,rr);</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">LL lca(int x)</span><br><span class="line">&#123;</span><br><span class="line">LL ans=0;</span><br><span class="line">while (tp[x]!=1)</span><br><span class="line">&#123;</span><br><span class="line">ans+=query(1,1,n,dfn[tp[x]],dfn[x]);</span><br><span class="line">x=fa[tp[x]];</span><br><span class="line">&#125;</span><br><span class="line">ans+=query(1,1,n,1,dfn[x]);</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">for (int i=1;i&lt;=n;++i) scanf (&quot;%lld&quot;,&amp;v[i]);</span><br><span class="line">for (int i=1;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">link(x,y);</span><br><span class="line">link(y,x);</span><br><span class="line">&#125;</span><br><span class="line">de[1]=1;</span><br><span class="line">dfs(1),dfs1(1,1);</span><br><span class="line">for (int i=1;i&lt;=n;++i) update(1,1,n,dfn[i],dfn[i],v[i]);</span><br><span class="line">for (int i=1;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line">//cout&lt;&lt;query(1,1,n,dfn[2],dfn[2])&lt;&lt;&quot;**&quot;&lt;&lt;endl;</span><br><span class="line">int fl=1;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;fl);</span><br><span class="line">if (fl==1)</span><br><span class="line">&#123;</span><br><span class="line">int x,a;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;a);</span><br><span class="line">update(1,1,n,dfn[x],dfn[x],a);</span><br><span class="line">&#125;</span><br><span class="line">if (fl==2)</span><br><span class="line">&#123;</span><br><span class="line">int x,a;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;a);</span><br><span class="line">update(1,1,n,dfn[x],ed[x],a);</span><br><span class="line">&#125;</span><br><span class="line">if (fl==3)</span><br><span class="line">&#123;</span><br><span class="line">int x;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;x);</span><br><span class="line">printf(&quot;%lld\n&quot;,lca(x));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我真是太愚蠢啦qaq</p>]]></content>
      
      
      
        <tags>
            
            <tag> 树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HNOI2012 矿场搭建</title>
      <link href="/blog/2017/02/10/HNOI2012%20%E7%9F%BF%E5%9C%BA%E6%90%AD%E5%BB%BA/"/>
      <url>/blog/2017/02/10/HNOI2012%20%E7%9F%BF%E5%9C%BA%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define maxn 4000</span><br><span class="line">using namespace std;</span><br><span class="line">struct hh</span><br><span class="line">&#123;</span><br><span class="line">int to,nxt;</span><br><span class="line">&#125;b[maxn];</span><br><span class="line">int head[maxn],dfn[maxn],low[maxn];</span><br><span class="line">int tot=0,df=0,de,k=0,z,gd;</span><br><span class="line">bool vis[maxn],g[maxn];</span><br><span class="line">void link(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">b[++tot].nxt=head[x];</span><br><span class="line">b[tot].to=y;</span><br><span class="line">head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">void tarjan(int x,int rt,int fa)</span><br><span class="line">&#123;</span><br><span class="line">dfn[x]=++df;low[x]=df;</span><br><span class="line">vis[x]=1;</span><br><span class="line">for (int i=head[x];i;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (t==fa) continue;</span><br><span class="line">if (!dfn[t])</span><br><span class="line">&#123;</span><br><span class="line">tarjan(t,rt,x);</span><br><span class="line">low[x]=min(low[x],low[t]);</span><br><span class="line">if (low[t]&gt;=dfn[x]) &#123;if (rt==x) de++; else g[x]=1;&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if (vis[t]) low[x]=min(low[x],dfn[t]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void dfs(int x)</span><br><span class="line">&#123;</span><br><span class="line">dfn[x]=k;</span><br><span class="line">if (g[x]) return ;</span><br><span class="line">z++;</span><br><span class="line">for (int i=head[x];i;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (g[t]&amp;&amp;dfn[t]!=k) gd++,dfn[t]=k;</span><br><span class="line">if (!dfn[t]) dfs(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n,cases=0;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">while (n!=0)</span><br><span class="line">&#123;</span><br><span class="line">memset(dfn,0,sizeof(dfn));</span><br><span class="line">memset(b,0,sizeof(b));</span><br><span class="line">memset(head,0,sizeof(head));</span><br><span class="line">memset(low,0,sizeof(low));</span><br><span class="line">memset(vis,0,sizeof(vis));</span><br><span class="line">memset(g,0,sizeof(g));</span><br><span class="line">tot=0,df=0,de=0,k=0,z=0,gd=0;</span><br><span class="line">int ans1=0,l=0;</span><br><span class="line">long long ans2=1;</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">link(x,y),link(y,x);</span><br><span class="line">l=max(max(l,x),y);</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1;i&lt;=l;++i) </span><br><span class="line">&#123;</span><br><span class="line">de=0;</span><br><span class="line">if (!dfn[i]) tarjan(i,i,0);</span><br><span class="line">if (de&gt;=2) g[i]=1;</span><br><span class="line">&#125;</span><br><span class="line">memset(dfn,0,sizeof(dfn));</span><br><span class="line">for (int i=1;i&lt;=l;++i)</span><br><span class="line">&#123;</span><br><span class="line">if (!dfn[i]&amp;&amp;!g[i])</span><br><span class="line">&#123;</span><br><span class="line">k++;z=gd=0;</span><br><span class="line">dfs(i);</span><br><span class="line">if (!gd) ans1+=2,ans2*=(z-1)*z/2;</span><br><span class="line">if (gd==1) ans1++,ans2*=z;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;Case %d: %d %lld\n&quot;,++cases,ans1,ans2);</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在求割点那里卡了一个多小时<br>因为之前都完全不知道还有根节点那边的判断啊啊啊TAT<br>看了好久那几句都没看懂(空想是没有用的啊少年！otz<br>实际上的话 画画图就差不多了 枚举多种情况<br>然后主要对每一块分三种情况讨论<br>有俩割点的时候随你怎么炸 反正炸了一个就跑另一边<br>有一个割点的话就设一个好了 然后那一个不要放在割点上<br>没有割点就很心塞了 乖乖设俩吧&#x3D; &#x3D;<br>方案的话就简单的乘一乘就好啦</p>]]></content>
      
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基本数据结构练习</title>
      <link href="/blog/2017/02/10/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%83%E4%B9%A0/"/>
      <url>/blog/2017/02/10/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>大概对dalao们而言的确是基本了<br>可是我只觉得这简直 <del>基（变）本（态）</del><br>####题面的话 要求操作如下<br><img src="http://img.blog.csdn.net/20170210083610891?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSVJJQV8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="操作一"><br><img src="http://img.blog.csdn.net/20170210083634547?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSVJJQV8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="操作二"></p><p>然后据说dalao们都在打主席树然而垃圾并不懂那是什么<br>上次打树剖题也有蛮久了忘得差不多了qwq<br>还好有强行不超纲的出题人救我等渣渣于水深火热之中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define maxn 150000</span><br><span class="line">#define ls x&lt;&lt;1</span><br><span class="line">#define rs x&lt;&lt;1|1</span><br><span class="line">using namespace std;</span><br><span class="line">int head[maxn],to[maxn],nxt[maxn],tot;</span><br><span class="line">int tree[maxn*4],sz[maxn],tp[maxn],son[maxn];</span><br><span class="line">int fa[maxn],ed[maxn],dfn[maxn];</span><br><span class="line">int de[maxn],df=0,n,ans[maxn],m1,m;</span><br><span class="line">struct hh &#123;</span><br><span class="line">int id,x,y,z,t;</span><br><span class="line">&#125; g[maxn];</span><br><span class="line">void link(int x,int y) &#123;</span><br><span class="line">nxt[++tot]=head[x];</span><br><span class="line">to[tot]=y;</span><br><span class="line">head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">void update(int x,int l,int r,int xx,int v) &#123;</span><br><span class="line">if (l==r) &#123;</span><br><span class="line">tree[x]=v;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (xx&lt;=mid) update(ls,l,mid,xx,v);</span><br><span class="line">else  update(rs,mid+1,r,xx,v);</span><br><span class="line">tree[x]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">int query(int x,int l,int r,int ll,int rr) &#123;</span><br><span class="line">if (ll&lt;=l&amp;&amp;r&lt;=rr) return tree[x];</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">int ans=0;</span><br><span class="line">if (ll&lt;=mid) ans+=query(ls,l,mid,ll,rr);</span><br><span class="line">if (rr&gt;mid) ans+=query(rs,mid+1,r,ll,rr);</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">void dfs(int x) &#123;</span><br><span class="line">sz[x]++;</span><br><span class="line">for (int i=head[x]; i; i=nxt[i]) &#123;</span><br><span class="line">int t=to[i];</span><br><span class="line">if (t==fa[x])continue;</span><br><span class="line">fa[t]=x;</span><br><span class="line">de[t]=de[x]+1;</span><br><span class="line">dfs(t);</span><br><span class="line">sz[x]+=sz[t];</span><br><span class="line">if (sz[t]&gt;sz[son[x]]) son[x]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void dfs2(int x,int top) &#123;</span><br><span class="line">tp[x]=top;</span><br><span class="line">dfn[x]=++df;</span><br><span class="line">if (son[x]) dfs2(son[x],top);</span><br><span class="line">for (int i=head[x]; i; i=nxt[i]) &#123;</span><br><span class="line">int t=to[i];</span><br><span class="line">if (t==fa[x]||t==son[x])continue;</span><br><span class="line">dfs2(t,t);</span><br><span class="line">&#125;</span><br><span class="line">ed[x]=df;</span><br><span class="line">&#125;</span><br><span class="line">int doit(int x,int y) &#123;</span><br><span class="line">int ans=0;</span><br><span class="line">while (tp[x]!=tp[y]) &#123;</span><br><span class="line">if (de[tp[x]]&lt;de[tp[y]]) swap(x,y);</span><br><span class="line">ans+=query(1,1,n,dfn[tp[x]],dfn[x]);</span><br><span class="line">x=fa[tp[x]];</span><br><span class="line">&#125;</span><br><span class="line">if (de[x]&gt;de[y]) swap(x,y);</span><br><span class="line">ans+=query(1,1,n,dfn[x],dfn[y]);</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">bool comp(hh a,hh b) &#123;</span><br><span class="line">if (a.z!=b.z) return a.z&lt;b.z;</span><br><span class="line">else return a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">for (int i=1; i&lt;n; ++i) &#123;</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">link(x,y);</span><br><span class="line">link(y,x);</span><br><span class="line">&#125;</span><br><span class="line">de[1]=1,dfs(1),dfs2(1,1);</span><br><span class="line">scanf (&quot;%d&quot;,&amp;m1);</span><br><span class="line">for (int i=1; i&lt;=m1; ++i) &#123;</span><br><span class="line">int x;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;x);</span><br><span class="line">int y,z;</span><br><span class="line">if (x==1) &#123;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;y,&amp;z);</span><br><span class="line">update(1,1,n,dfn[y],z);</span><br><span class="line">&#125;</span><br><span class="line">if (x==2) &#123;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;y,&amp;z);</span><br><span class="line">cout&lt;&lt;doit(y,z)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">if (x==3) &#123;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;y);</span><br><span class="line">cout&lt;&lt;query(1,1,n,dfn[y],ed[y])&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;m);</span><br><span class="line">for (int i=1; i&lt;=m; ++i) &#123;</span><br><span class="line">int x;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;x);</span><br><span class="line">g[i].id=x,g[i].t=i;</span><br><span class="line">if (x==1) &#123;</span><br><span class="line">scanf(&quot;%d%d%d&quot;,&amp;g[i].x,&amp;g[i].y,&amp;g[i].z);</span><br><span class="line">&#125;</span><br><span class="line">if (x==2) &#123;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;g[i].x,&amp;g[i].z);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1; i&lt;=n; ++i)</span><br><span class="line">g[++m].id=0,g[m].x=dfn[i],g[m].z=query(1,1,n,dfn[i],dfn[i]);</span><br><span class="line">sort(g+1,g+m+1,comp);</span><br><span class="line">memset(tree,0,sizeof(tree));</span><br><span class="line">for (int i=1; i&lt;=m; ++i) &#123;</span><br><span class="line">if (g[i].id==0) update(1,1,n,g[i].x,1);</span><br><span class="line">if (g[i].id==1) ans[g[i].t]=doit(g[i].x,g[i].y);</span><br><span class="line">else ans[g[i].t]=query(1,1,n,dfn[g[i].x],ed[g[i].x]);</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1; i&lt;=m-n; ++i) cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考场上前30分都没拿到实在是比较可惜<br>打到了doit里面就开始懵逼 不记得dfn在哪里求的来着了<br>老了老了脑子也不怎么好使了qwq<br>另外第二问的处理方式简直太dio了！不由得惊叹&#x3D; &#x3D;<br>声明一下 我代码也是学的标程啊！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老年人备忘录</title>
      <link href="/blog/2017/02/09/%E8%80%81%E5%B9%B4%E4%BA%BA%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/blog/2017/02/09/%E8%80%81%E5%B9%B4%E4%BA%BA%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>#####基本都是源于网络各处 <del>搜刮而来</del> 侵删</p></blockquote><hr><p>####- 数据范围与时间复杂度</p><blockquote><p>N&lt;&#x3D;20   O(2n)<br>20 &lt; N&lt; &#x3D;100   O(n3)<br>100&lt; N&lt;&#x3D;1000   O(n2)<br>10000&lt; N&lt;&#x3D;105   O(nlogn)<br>105&lt; N&lt;&#x3D;108   O(n)<br>N&gt;108   O(logn)</p></blockquote><hr><p>####- 手动开栈</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int size = 256 &lt;&lt; 20; // 256MB</span><br><span class="line"> char *p = (char*)malloc(size) + size;</span><br><span class="line"> __asm__(&quot;movl %0, %%esp\n&quot; :: &quot;r&quot;(p));</span><br></pre></td></tr></table></figure><hr><p>####- 血的教训</p><blockquote><p>1.存邻接表线段树什么的把数组开大一点 不然真的死都查不出错qwq<br>2.绝对值这种东西就是出来坑爹的吧<br>3.数据结构里的细节很重要 不要只凭手感打题啊！<br>4.啊刚写完第一条就又因为线段树数组大小wa了QAQ<br>5.处理环的时候可以直接了当记录l与r移动或添删就都不会那么麻烦</p></blockquote><hr><p>####- 位运算相关</p><blockquote><p>1.集合取并(Set union)<br>A | B<br>集合取交(Set intersection)<br>A &amp; B<br>集合相减(Set subtraction)<br>A &amp; ~B<br>集合取反(Set negation)<br>ALL_BITS ^ A<br>2.置位(Set bit)<br>A |&#x3D; 1 &lt;&lt; bit<br>清位(Clear bit)<br>A &amp;&#x3D; ~(1 &lt;&lt; bit)<br>测位(Test bit)<br>(A &amp; 1 &lt;&lt; bit) !&#x3D; 0<br>(A &gt;&gt; bit &amp; 1) !&#x3D; 0<br>3.取最后一个非0位(Extracting every last bit)<br>A &amp; -A<br>A &amp; ~(A-1)<br>统计非0位(Counting out the bits)<br>For (; A; A -&#x3D; A &amp; -A) ++cnt;<br>取所有子集(All the subsets)<br>X &#x3D; A<br>4.While (X) X &#x3D; (X - 1) &amp; A<br>判断是否有相邻的1<br>(A &amp; A&gt;&gt;1) &#x3D;&#x3D; 0<br>交换两整数<br>a ^&#x3D; b, b ^&#x3D; a, a ^&#x3D; b</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>聪聪可可（点分治）</title>
      <link href="/blog/2017/02/08/%E8%81%AA%E8%81%AA%E5%8F%AF%E5%8F%AF%EF%BC%88%E7%82%B9%E5%88%86%E6%B2%BB%EF%BC%89/"/>
      <url>/blog/2017/02/08/%E8%81%AA%E8%81%AA%E5%8F%AF%E5%8F%AF%EF%BC%88%E7%82%B9%E5%88%86%E6%B2%BB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define maxn 40000</span><br><span class="line">using namespace std;</span><br><span class="line">struct eg</span><br><span class="line">&#123;</span><br><span class="line">int to,v,nxt;</span><br><span class="line">&#125;b[maxn];</span><br><span class="line">int head[maxn],tot=0,f[maxn],sz[maxn],vis[maxn],d[maxn]=&#123;0&#125;,ans,root,sum,t1[5];</span><br><span class="line">int gcd(int x,int y)&#123;return y?gcd(y,x%y):x;&#125;</span><br><span class="line">void link(int x,int y,int z)</span><br><span class="line">&#123;</span><br><span class="line">b[++tot].nxt=head[x];</span><br><span class="line">b[tot].to=y;</span><br><span class="line">b[tot].v=z;</span><br><span class="line">head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">void getroot(int u,int fa)</span><br><span class="line">&#123;</span><br><span class="line">sz[u]=1,f[u]=0;</span><br><span class="line">for (int i=head[u];i;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (vis[t]||t==fa) continue;</span><br><span class="line">getroot(t,u);</span><br><span class="line">sz[u]+=sz[t];</span><br><span class="line">f[u]=max(f[u],sz[t]);</span><br><span class="line">&#125;</span><br><span class="line">f[u]=max(f[u],sum-sz[u]);</span><br><span class="line">if (f[root]&gt;f[u]) root=u;</span><br><span class="line">&#125;</span><br><span class="line">void getdeep(int x,int fa)</span><br><span class="line">&#123;</span><br><span class="line">t1[d[x]]++;</span><br><span class="line">for (int i=head[x];i;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (vis[t]||t==fa) continue;</span><br><span class="line">d[t]=(d[x]+b[i].v)%3;</span><br><span class="line">getdeep(t,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int cal(int x,int vv)</span><br><span class="line">&#123;</span><br><span class="line">d[x]=vv%3;</span><br><span class="line">t1[0]=t1[1]=t1[2]=0;</span><br><span class="line">getdeep(x,0);</span><br><span class="line">return t1[1]*t1[2]*2+t1[0]*t1[0];</span><br><span class="line">&#125;</span><br><span class="line">void work(int x)</span><br><span class="line">&#123;</span><br><span class="line">ans+=cal(x,0);</span><br><span class="line">vis[x]=1;</span><br><span class="line">for (int i=head[x];i;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (vis[t]) continue;</span><br><span class="line">ans-=cal(t,b[i].v);</span><br><span class="line">sum=sz[t];</span><br><span class="line">root=0;</span><br><span class="line">getroot(t,0);</span><br><span class="line">work(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">for (int i=1;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line">int x,y,w;</span><br><span class="line">scanf (&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;w);</span><br><span class="line">link(x,y,w);</span><br><span class="line">link(y,x,w);</span><br><span class="line">&#125;</span><br><span class="line">root=0;f[0]=n,sum=n;</span><br><span class="line">getroot(1,0);</span><br><span class="line">work(root);</span><br><span class="line">int l=gcd(ans,n*n);</span><br><span class="line">cout&lt;&lt;(ans/l)&lt;&lt;&quot;/&quot;&lt;&lt;(n*n/l);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点分治板子<br>然而想那个 t1[1]*t1[2]*2+t1[0]*t1[0]想了好久<br>就是最基本的组合方法  毕竟（2,5）和（5,2）可是要算两次的<br>画画图就好了<br><del>（不要像我一样盯着大佬们的显然可得懵逼23333）</del></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>可能是日记</title>
      <link href="/blog/2017/02/04/%E5%8F%AF%E8%83%BD%E6%98%AF%E6%97%A5%E8%AE%B0/"/>
      <url>/blog/2017/02/04/%E5%8F%AF%E8%83%BD%E6%98%AF%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>2017.02.04<br>考试 考得贼差（成功垫底23333）<br>知耻而后勇啊少年qwq</p><hr><p>2017.02.06<br>再度垫底 很想放弃。<br>连退组的申请都写完了<br>自己真是不堪一击。</p><hr><p>2017.02.08<br>同学们刷dp题都贼快就我一个留在原地（瞬间爆炸）<br>而且最难过的是感觉自己就是妥妥的透明人呀qwq<br>这样的性格也是必然吧</p><hr><p>2017.02.10<br>昨天刚考完明天还要考qwq<br>笑着活下去吧！毕竟梦想可是要成为<del>魔法烧酒</del>之类的呀！<br>让IZAYA赐予我力量吧!<br>另外 今天真的好想睡觉啊啊啊啊啊真的好想好想睡觉啊啊啊啊啊<br>让我再睡一天都ok呀啊啊啊啊啊啊啊啊啊</p><hr><p>2017.02.18<br>昨晚搞了个大事情 感觉药丸<br>在高中这么违纪还被抓了好像还是第一次qwq<br>感觉会被校领导怼死<br>先好好搞竞赛吧qaq</p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树的统计count</title>
      <link href="/blog/2017/01/22/%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1count/"/>
      <url>/blog/2017/01/22/%E6%A0%91%E7%9A%84%E7%BB%9F%E8%AE%A1count/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define maxn 300000</span><br><span class="line">#define ls x&lt;&lt;1</span><br><span class="line">#define rs x&lt;&lt;1|1</span><br><span class="line">using namespace std;</span><br><span class="line">int n,head[maxn],tot=0,v[maxn],top[maxn],son[maxn],fa[maxn],de[maxn],w[maxn],z,tree1[maxn],tree2[maxn],sz[maxn];</span><br><span class="line">char s[20];</span><br><span class="line">struct eg</span><br><span class="line">&#123;</span><br><span class="line">int to;</span><br><span class="line">int nxt;</span><br><span class="line">&#125;b[maxn];</span><br><span class="line">void link(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">b[++tot].nxt=head[x];</span><br><span class="line">b[tot].to=y;</span><br><span class="line">head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">void dfs1(int x,int f)</span><br><span class="line">&#123;</span><br><span class="line">sz[x]=1,fa[x]=f;</span><br><span class="line">for (int i=head[x];i!=-1;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (t==f) continue;</span><br><span class="line">de[t]=de[x]+1;</span><br><span class="line">dfs1(t,x);</span><br><span class="line">sz[x]+=sz[t];</span><br><span class="line">if (son[x]==-1||sz[son[x]]&lt;sz[t]) son[x]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void dfs2(int x,int tp)</span><br><span class="line">&#123;</span><br><span class="line">top[x]=tp,w[x]=++z；</span><br><span class="line">if (son[x]!=-1) dfs2(son[x],tp);</span><br><span class="line">else return ;</span><br><span class="line">for (int i=head[x];i!=-1;i=b[i].nxt)</span><br><span class="line">&#123;</span><br><span class="line">int t=b[i].to;</span><br><span class="line">if (t!=fa[x]&amp;&amp;t!=son[x]) dfs2(t,t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void build(int x,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">tree2[x]=0,tree1[x]=-900000000;</span><br><span class="line">if (l==r) return ;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">build (ls,l,mid);</span><br><span class="line">build (rs,mid+1,r);</span><br><span class="line">&#125;</span><br><span class="line">void updata(int x,int l,int r,int d,int y)</span><br><span class="line">&#123;</span><br><span class="line">if (l==r&amp;&amp;l==d) </span><br><span class="line">&#123;</span><br><span class="line">tree1[x]=y;</span><br><span class="line">tree2[x]=y;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (d&lt;=mid)updata(ls,l,mid,d,y);</span><br><span class="line">else updata(rs,mid+1,r,d,y);</span><br><span class="line">tree1[x]=max(tree1[ls],tree1[rs]);</span><br><span class="line">tree2[x]=tree2[ls]+tree2[rs];</span><br><span class="line">&#125;</span><br><span class="line">int qsum(int x,int l,int r,int ll,int rr)</span><br><span class="line">&#123;</span><br><span class="line">if (ll==l&amp;&amp;r==rr) return tree2[x];</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (ll&gt;mid) return qsum(rs,mid+1,r,ll,rr);</span><br><span class="line">else if (rr&lt;=mid) return qsum(ls,l,mid,ll,rr);</span><br><span class="line">else return qsum(ls,l,mid,ll,mid)+qsum(rs,mid+1,r,mid+1,rr);</span><br><span class="line">&#125;</span><br><span class="line">int qmax(int x,int l,int r,int ll,int rr)</span><br><span class="line">&#123;</span><br><span class="line">if (ll==l&amp;&amp;r==rr) return tree1[x];</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (rr&lt;=mid) return qmax(ls,l,mid,ll,rr);</span><br><span class="line">else if (ll&gt;mid) return qmax(rs,mid+1,r,ll,rr);</span><br><span class="line">else return max(qmax(ls,l,mid,ll,mid),qmax(rs,mid+1,r,mid+1,rr));</span><br><span class="line">&#125;</span><br><span class="line">int find(int x,int y,int flag)</span><br><span class="line">&#123;</span><br><span class="line">if (flag==1)</span><br><span class="line">&#123;</span><br><span class="line">int ans=-900000000;</span><br><span class="line">int f1=top[x],f2=top[y];</span><br><span class="line">while(f1!=f2)</span><br><span class="line">&#123;</span><br><span class="line">if(de[f1]&lt;de[f2]) swap(f1,f2),swap(x,y);</span><br><span class="line">ans=max(ans,qmax(1,1,z,w[f1],w[x]));</span><br><span class="line">x=fa[f1],f1=top[x];</span><br><span class="line">&#125;</span><br><span class="line">if (de[x]&gt;de[y]) swap(x,y);</span><br><span class="line">return max(ans,qmax(1,1,z,w[x],w[y]));</span><br><span class="line">&#125;</span><br><span class="line">if (flag==2)</span><br><span class="line">&#123;</span><br><span class="line">int ans=0;</span><br><span class="line">int f1=top[x],f2=top[y];</span><br><span class="line">while (f1!=f2)</span><br><span class="line">&#123;</span><br><span class="line">if(de[f1]&lt;de[f2]) swap(f1,f2),swap(x,y);</span><br><span class="line">ans+=qsum(1,1,z,w[f1],w[x]);</span><br><span class="line">x=fa[f1],f1=top[x];</span><br><span class="line">&#125;</span><br><span class="line">if (de[x]&gt;de[y]) swap(x,y);</span><br><span class="line">return ans+qsum(1,1,z,w[x],w[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">memset(head, -1, sizeof(head));</span><br><span class="line">    memset(son, -1, sizeof(son));</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">for (int i=1;i&lt;n;++i)</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">link(x,y);</span><br><span class="line">link(y,x);</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">scanf (&quot;%d&quot;,&amp;v[i]);</span><br><span class="line">de[1]=1;</span><br><span class="line">dfs1(1,0);</span><br><span class="line">dfs2(1,1);</span><br><span class="line">build(1,1,z);</span><br><span class="line">for (int i=1;i&lt;=n;++i) updata(1,1,z,w[i],v[i]);</span><br><span class="line">int q;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;q);</span><br><span class="line">for (int i=1;i&lt;=q;++i)</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%s&quot;,s);</span><br><span class="line">int x,y;</span><br><span class="line">scanf (&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">if (s[0]==&#x27;C&#x27;)</span><br><span class="line">updata(1,1,z,w[x],y);</span><br><span class="line">if (s[1]==&#x27;M&#x27;)</span><br><span class="line">printf(&quot;%d\n&quot;,find(x,y,1));</span><br><span class="line">if (s[1]==&#x27;S&#x27;)</span><br><span class="line">printf(&quot;%d\n&quot;,find(x,y,2));</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嗯我知道打得很丑然而毕竟是第一个几乎全靠自己的树剖板子吧qaq<br>诶嘿嘿</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>未完成呀</title>
      <link href="/blog/2017/01/21/%E6%9C%AA%E5%AE%8C%E6%88%90%E5%91%80/"/>
      <url>/blog/2017/01/21/%E6%9C%AA%E5%AE%8C%E6%88%90%E5%91%80/</url>
      
        <content type="html"><![CDATA[<p>##专题</p><blockquote><ul><li>noip2016</li><li>线段树 树状数组</li><li>字典trie 指针表示的不怎么熟</li><li>kmp</li><li>RMQ</li><li>LCA 倍增 tarjan</li><li>ac自动机</li><li>manacher</li><li>后缀数组</li><li>dp相关 基础及斜率优化等</li><li>贪心 思维不够灵活 细节</li><li>二分 玄学check有必要多写题来感性的感受</li><li>splay</li><li>树链剖分</li><li>单调栈 \ 队列</li><li>平衡树</li><li>hash</li><li>哦还有万年扯不清的搜索</li><li>图的基础内容（最短路等</li><li>树的基础内容（主要是我的指针学得qaq</li><li>强连通分量相关</li><li>最小环相关qaq<h4 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h4></li></ul></blockquote><hr><hr><p>##题目</p><blockquote><p> 字符串，DP讲座<br>P1219 - 【CEOI2004】锯木厂选址</p><p>贪心，二分讲座<br>P1294 - 【IOI 2001 】移动电话<br>P2278 - 【POI2001】密度图</p><p>LCA 树链剖分<br>P2279 - tree树<br>P2280 - 【HEOI2016】tree树—加强版<br>P2272 - Dark的锁链<br>P1090 - 【NOIP2013】货车运输<br>P2253 - 【NOIP2016】天天爱跑步<br>P2281 - 【HNOI2016】网络</p></blockquote><blockquote><p>强联通分量<br>P1333 - 【HNOI2012】矿场搭建  </p><p>考试相关<br>P1228 - 最大和<br>P1050 - 【USACO 3.2.2】二进制数01串<br>P1979 - 贪婪大陆<br>P1497 - 【[国家集训队2011】跳跳棋 （难）</p></blockquote><blockquote><p>递归与分治<br>P1448 - 【USACO】牛跳房子     (难)</p><p>贪心上课<br>P2294 - 【NOI1998】围巾裁剪<br>P1082 - 【NOIP2003】侦探推理<br>P1706 - 【NOIP2003】传染病控制</p></blockquote><blockquote><p>递推 数学<br>P1051 - 新汉诺塔</p><p>树形dp<br>Poj 2342<br>Poj 3342<br>P2171 - 火车站开饭店<br>P1634 - 【中学高级本】聚会的快乐<br>P1010 - 【NOIP2003】加分二叉树</p><p>考试</p></blockquote><blockquote><p>2002-2016 联赛70题(6月之前</p></blockquote><p>嗯实在还有好多 qwq</p><p>先挖坑吧慢慢填 ovo</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树状数组逆序对</title>
      <link href="/blog/2017/01/14/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E9%80%86%E5%BA%8F%E5%AF%B9/"/>
      <url>/blog/2017/01/14/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E9%80%86%E5%BA%8F%E5%AF%B9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define LL long long</span><br><span class="line">using namespace std;</span><br><span class="line">LL a[500000],c[500000]=&#123;0&#125;;</span><br><span class="line">LL n,ans=0,rr=0;</span><br><span class="line">struct kl</span><br><span class="line">&#123;</span><br><span class="line">LL x,pos;</span><br><span class="line">&#125;re[500000];</span><br><span class="line">bool comp(kl q,kl y) &#123;return (q.x&lt;y.x);&#125;</span><br><span class="line">LL lowbit(LL x)</span><br><span class="line">&#123;</span><br><span class="line">return x&amp;-x;</span><br><span class="line">&#125;</span><br><span class="line">LL sum(LL x)</span><br><span class="line">&#123;</span><br><span class="line">LL as=0;</span><br><span class="line">while (x&gt;0)</span><br><span class="line">&#123;</span><br><span class="line">as+=c[x];</span><br><span class="line">x-=lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line">return as;</span><br><span class="line">&#125;</span><br><span class="line">void add(LL x)</span><br><span class="line">&#123;</span><br><span class="line">while (x&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line">c[x]++;</span><br><span class="line">x+=lowbit(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;n);</span><br><span class="line">for (int o=1;o&lt;=n;++o)</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;re[o].x);</span><br><span class="line">re[o].pos=o;</span><br><span class="line">&#125;</span><br><span class="line">sort(re+1,re+n+1,comp);</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">if (re[i].x!=re[i-1].x) rr++;</span><br><span class="line">a[re[i].pos]=rr;</span><br><span class="line">&#125;</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">add(a[i]);</span><br><span class="line">ans+=i-sum(a[i]);</span><br><span class="line">//cout&lt;&lt;sum(a[i])&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>noip2016</title>
      <link href="/blog/2017/01/13/noip2016/"/>
      <url>/blog/2017/01/13/noip2016/</url>
      
        <content type="html"><![CDATA[<p>1.很丑的toy(考场上打的真的丑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;iomanip&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int n,m,k,l;</span><br><span class="line">bool b[100010],q;</span><br><span class="line">char s[100010][12];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">freopen (&quot;toy.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen (&quot;toy.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">//cout&lt;&lt;n&lt;&lt;m;</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">scanf(&quot;%d %s&quot;,&amp;b[i],s[i]);</span><br><span class="line">l=1;</span><br><span class="line">for (int i=1;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d%d&quot;,&amp;q,&amp;k);</span><br><span class="line">if (b[l])</span><br><span class="line">&#123;</span><br><span class="line">if (q)</span><br><span class="line">&#123;</span><br><span class="line">l-=k;</span><br><span class="line">if (l&lt;1)</span><br><span class="line">l+=n;</span><br><span class="line">&#125;</span><br><span class="line">if (!q)</span><br><span class="line">&#123;</span><br><span class="line">l+=k;</span><br><span class="line">if (l&gt;n)</span><br><span class="line">l-=n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if (q)</span><br><span class="line">&#123;</span><br><span class="line">l+=k;</span><br><span class="line">if (l&gt;n)</span><br><span class="line">l-=n;</span><br><span class="line">&#125;</span><br><span class="line">if (!q)</span><br><span class="line">&#123;</span><br><span class="line">l-=k;</span><br><span class="line">if (l&lt;1)</span><br><span class="line">l+=n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;,s[l]);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线段树练习3</title>
      <link href="/blog/2016/12/23/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%83%E4%B9%A03/"/>
      <url>/blog/2016/12/23/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%83%E4%B9%A03/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;//wym&#x27;s third xianduanshu</span><br><span class="line">#define maxn 950000</span><br><span class="line">#define ls (num&lt;&lt;1)</span><br><span class="line">#define rs (num&lt;&lt;1|1)</span><br><span class="line">using namespace std;</span><br><span class="line">long long a[maxn],tree[maxn],size[maxn],lazy[maxn];</span><br><span class="line">void build (long long num,long long l,long long r)</span><br><span class="line">&#123;</span><br><span class="line">size[num]=(r-l+1);</span><br><span class="line">if (l==r) </span><br><span class="line">&#123;</span><br><span class="line">tree[num]=a[l];</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">long long mid=(l+r)&gt;&gt;1;</span><br><span class="line">build (ls,l,mid);</span><br><span class="line">build (rs,mid+1,r);</span><br><span class="line">tree[num]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">void down (long long num)</span><br><span class="line">&#123;</span><br><span class="line">tree[ls]+=lazy[num]*size[ls];</span><br><span class="line">tree[rs]+=lazy[num]*size[rs];</span><br><span class="line">lazy[ls]+=lazy[num],lazy[rs]+=lazy[num];</span><br><span class="line">lazy[num]=0;</span><br><span class="line">&#125;</span><br><span class="line">void update(long long num,long long l,long long r,long long x,long long y,long long z)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(num);</span><br><span class="line">if (x&lt;=l&amp;&amp;r&lt;=y) </span><br><span class="line">&#123;</span><br><span class="line">tree[num]+=z*size[num];</span><br><span class="line">lazy[num]+=z;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">long long mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (x&lt;=mid) update(ls,l,mid,x,y,z);</span><br><span class="line">if (y&gt;mid)  update(rs,mid+1,r,x,y,z);</span><br><span class="line">tree[num]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">long long query(long long num,long long l,long long r,long long x,long long y)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(num);</span><br><span class="line">if (x&lt;=l&amp;&amp;r&lt;=y) return tree[num];</span><br><span class="line">    long long mid=(l+r)&gt;&gt;1;</span><br><span class="line">long long res=0;</span><br><span class="line">if (x&lt;=mid) res+=query(ls,l,mid,x,y);</span><br><span class="line">if (y&gt;mid)  res+=query(rs,mid+1,r,x,y);</span><br><span class="line">tree[num]=tree[ls]+tree[rs];</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">long long n,m;</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;n);</span><br><span class="line">for (long long i=1;i&lt;=n;++i)</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;a[i]);</span><br><span class="line">build (1,1,n);</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;m);</span><br><span class="line">for (long long i=1;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line">long long b,x,y,z;</span><br><span class="line">scanf (&quot;%lld&quot;,&amp;b);</span><br><span class="line">if (b==1)</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%lld%lld%lld&quot;,&amp;x,&amp;y,&amp;z);</span><br><span class="line">update(1,1,n,x,y,z);</span><br><span class="line">&#125;</span><br><span class="line">else  </span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%lld%lld&quot;,&amp;x,&amp;y);</span><br><span class="line">printf(&quot;%lld\n&quot;,query(1,1,n,x,y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次一小时死于只输入一个lld<br>大概不是智商问题而是视力问题<br>绝望</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>线段树练习2</title>
      <link href="/blog/2016/12/20/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%83%E4%B9%A02/"/>
      <url>/blog/2016/12/20/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%83%E4%B9%A02/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstdlib&gt;//wym&#x27;s second xianduanshu</span><br><span class="line">#define maxn 7000000</span><br><span class="line">#define ls (num&lt;&lt;1)</span><br><span class="line">#define rs (num&lt;&lt;1|1)</span><br><span class="line">using namespace std;</span><br><span class="line">int a[maxn],tree[maxn],size[maxn],lazy[maxn];</span><br><span class="line">void build (int num,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">size[num]=r-l+1;</span><br><span class="line">if (l==r) </span><br><span class="line">&#123;</span><br><span class="line">tree[num]=a[l];</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">build (ls,l,mid);</span><br><span class="line">build (rs,mid+1,r);</span><br><span class="line">tree[num]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">void down (int num)</span><br><span class="line">&#123;</span><br><span class="line">tree[ls]+=lazy[num]*size[ls];</span><br><span class="line">tree[rs]+=lazy[num]*size[rs];</span><br><span class="line">lazy[ls]+=lazy[num],lazy[rs]+=lazy[num];</span><br><span class="line">lazy[num]=0;</span><br><span class="line">&#125;</span><br><span class="line">void update(int num,int l,int r,int x,int y,int z)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(num);</span><br><span class="line">if (l==x&amp;&amp;r==y) </span><br><span class="line">&#123;</span><br><span class="line">tree[num]+=z*size[num];</span><br><span class="line">lazy[num]+=z;</span><br><span class="line">return ;</span><br><span class="line">&#125;</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (y&lt;=mid) update(ls,l,mid,x,y,z);</span><br><span class="line">else if (x&gt;mid)  update(rs,mid+1,r,x,y,z);</span><br><span class="line">else update(ls,l,mid,x,mid,z),update(rs,mid+1,r,mid+1,y,z);</span><br><span class="line">tree[num]=tree[ls]+tree[rs];</span><br><span class="line">&#125;</span><br><span class="line">int query(int num,int l,int r,int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(num);</span><br><span class="line">if (x&lt;=l&amp;&amp;r&lt;=y) return tree[num];</span><br><span class="line">int mid=(l+r)&gt;&gt;1;</span><br><span class="line">if (y&lt;=mid) return query(ls,l,mid,x,y);</span><br><span class="line">else if (x&gt;mid) return query(rs,mid+1,r,x,y);</span><br><span class="line">else return query(ls,l,mid,x,mid)+query(rs,mid+1,r,mid+1,y);</span><br><span class="line">&#125;</span><br><span class="line">/*int query(int num,int l,int r,int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">if (l!=r) down(num);</span><br><span class="line">if (x==l) return tree[num];</span><br><span class="line">int mid=(l+r)&gt;&gt;1,res=0;</span><br><span class="line">if (x&lt;=mid) res+=query(ls,l,mid,x,y);</span><br><span class="line">if (y&gt;mid)  res+=query(rs,mid+1,r,x,y);</span><br><span class="line">return res;</span><br><span class="line">&#125;*/</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n,m;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;n);</span><br><span class="line">for (int i=1;i&lt;=n;++i)</span><br><span class="line">scanf (&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">build (1,1,n);</span><br><span class="line">scanf (&quot;%d&quot;,&amp;m);</span><br><span class="line">for (int i=1;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line">int b,x,y,z;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;b);</span><br><span class="line">if (b==1)</span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);</span><br><span class="line">update(1,1,n,x,y,z);</span><br><span class="line">&#125;</span><br><span class="line">else  </span><br><span class="line">&#123;</span><br><span class="line">scanf (&quot;%d&quot;,&amp;x);</span><br><span class="line">printf(&quot;%d\n&quot;,query(1,1,n,x,x));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>哈哈哈哈哈哈哈哈又是半个小时死于一些奇怪的东西<br>我什么人品啊哈哈哈哈哈哈哈哈哈哈哈（眼泪掉下来）<br>真的 以后再也不能输入<strong>x</strong>处理<strong>i</strong>了（痛苦的笑容）<br>生命真是充满阳光啊qwq</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
